{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Card from \"../../components/Card/Card\";\nimport { useState, useRef, useContext, useEffect } from \"react\";\nimport styles from './signup.module.css';\nimport { useRouter } from 'next/router';\nimport AuthContext from \"../../components/store/use-context\";\nimport Head from \"next/head\";\n\nconst checkUpper = string => {\n  for (let i of string) {\n    if (isNaN(i)) {\n      if (i == i.toUpperCase()) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nconst signup = () => {\n  const router = useRouter();\n  const fRef = useRef();\n  const sRef = useRef();\n  const tRef = useRef();\n  const foRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isBusiness,\n    1: setIsBusiness\n  } = useState(false);\n  const {\n    0: fName,\n    1: setFName\n  } = useState(null);\n  const {\n    0: sName,\n    1: setSName\n  } = useState(null);\n  const {\n    0: tName,\n    1: setTName\n  } = useState(null);\n  const {\n    0: foName,\n    1: setFoName\n  } = useState(null);\n  const {\n    0: inValidSignup,\n    1: setInvalidSignUp\n  } = useState(null);\n  useEffect(() => {\n    if (authCtx.isBusiness && authCtx.isLoggedIn) {\n      router.push('/business');\n    }\n\n    if (!authCtx.isBusiness & authCtx.isLoggedIn) {\n      router.push('/AllRestaurants');\n    }\n  }, [authCtx.isLoggedIn]);\n\n  async function addMeetupHandler(enteredMeetupData) {\n    const response = await fetch('../api/handler', {\n      method: 'POST',\n      body: JSON.stringify(enteredMeetupData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n  }\n\n  const businessHandler = () => {\n    setIsBusiness(prevState => !prevState);\n    fRef.current.value = '';\n    sRef.current.value = '';\n    tRef.current.value = '';\n    foRef.current.value = '';\n    setFName(null);\n    setSName(null);\n    setTName(null);\n    setFoName(null);\n  };\n\n  const signup = () => {\n    if (fName && sName & tName && foName) {\n      const accArr = {\n        firstName: fRef.current.value,\n        lastName: sRef.current.value,\n        email: tRef.current.value,\n        password: foRef.current.value\n      };\n      const enteredMeetupData = {\n        name: accArr.firstName,\n        address: accArr.lastName,\n        image: '',\n        description: '',\n        paragraph: '',\n        menu: [],\n        email: accArr.email\n      };\n      fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDRIvxAwx8KqrhXOQpIzkSave61memF2Uw', {\n        method: 'POST',\n        body: JSON.stringify({\n          email: accArr.email,\n          password: accArr.password,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        setIsLoading(false);\n\n        if (res.ok) {\n          if (!isBusiness) {\n            fetch(`https://reactfirst-48147-default-rtdb.firebaseio.com/user/0.json`, {\n              method: 'POST',\n              body: JSON.stringify({\n                email: accArr.email,\n                firstName: accArr.firstName,\n                lastName: accArr.lastName\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then().then(r => {\n              router.push('/AllRestaurants');\n              authCtx.login(tRef.current.value, accArr.firstName, accArr.lastName, false);\n            });\n          } else {\n            addMeetupHandler(enteredMeetupData);\n            fetch(`https://reactfirst-48147-default-rtdb.firebaseio.com/user/1.json`, {\n              method: 'POST',\n              body: JSON.stringify({\n                email: accArr.email,\n                businessName: accArr.firstName,\n                address: accArr.lastName\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then().then(r => {\n              router.push('/business');\n              authCtx.login(tRef.current.value, accArr.firstName, accArr.lastName, true);\n            });\n          }\n        } else {\n          return res.json().then(data => {\n            let errorMessage = 'Auth failed';\n\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            alert(errorMessage);\n          });\n        }\n      });\n    } else {\n      let errStr = \"ERROR:\";\n      setInvalidSignUp(true);\n\n      if (!fName) {\n        errStr += \" Invalid Name,\";\n      }\n\n      if (!sName) {\n        if (isBusiness) {\n          errStr += \" Invalid Address,\";\n        } else {\n          errStr += \" Invalid Last Name,\";\n        }\n      }\n\n      if (!tName) {\n        errStr += \" Invalid Email,\";\n      }\n\n      if (!foName) {\n        errStr += \" Invalid Password,\";\n      }\n\n      errStr = errStr.slice(0, -1);\n      alert(errStr);\n    }\n  };\n\n  const checkValid = e => {\n    setInvalidSignUp(true);\n\n    if (e.target.name === 'business' || e.target.name === 'first') {\n      if (e.target.value.length > 1) {\n        setFName(true);\n        return;\n      }\n\n      setFName(false);\n    }\n\n    if (e.target.name === 'address' || e.target.name === 'last') {\n      if (e.target.value.length > 1) {\n        setSName(true);\n        console.log('a');\n        return;\n      }\n\n      setSName(false);\n    }\n\n    if (e.target.name === 'email') {\n      if (e.target.value.length > 0 && (e.target.value.includes('.com') || e.target.value.includes('.net') || e.target.value.includes('.edu')) && e.target.value.includes('@')) {\n        setTName(true);\n        return;\n      }\n\n      setTName(false);\n    }\n\n    if (e.target.name === 'password') {\n      if (e.target.value.length > 6 && /\\d/.test(e.target.value) && checkUpper(e.target.value)) {\n        setFoName(true);\n        return;\n      }\n\n      setFoName(false);\n    }\n  };\n\n  const setBack = e => {\n    if (e.target.name === 'business' || e.target.name === 'first') {\n      setFName(null);\n    } else if (e.target.name === 'address' || e.target.name === 'last') {\n      setSName(null);\n    } else if (e.target.name === 'email') {\n      setTName(null);\n    } else {\n      setFoName(null);\n    }\n  };\n\n  if (isBusiness) {\n    return /*#__PURE__*/_jsxs(Card, {\n      children: [\" \", /*#__PURE__*/_jsx(Head, {\n        children: /*#__PURE__*/_jsx(\"title\", {\n          children: \"Sign Up\"\n        })\n      }), /*#__PURE__*/_jsx(\"h1\", {\n        children: \"Signup Business\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.buttonBusiness,\n        children: [\" \", /*#__PURE__*/_jsx(\"button\", {\n          onClick: businessHandler,\n          children: \"\\u2190\"\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: \"\\u25CE\"\n        }), \"\\u25C9\", /*#__PURE__*/_jsx(\"span\", {}), /*#__PURE__*/_jsx(\"button\", {\n          children: \"\\u2192\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"business\",\n          children: \"Business Name\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          placeHolder: \"ex: fancy business\",\n          onInput: setBack,\n          onBlur: checkValid,\n          ref: fRef,\n          name: \"business\",\n          className: `${fName != false ? '' : styles.flagged}`\n        }), /*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          placeHolder: \"ex: 7 business rd\",\n          onInput: setBack,\n          onBlur: checkValid,\n          ref: sRef,\n          type: \"text\",\n          name: \"address\",\n          className: `${sName != false ? '' : styles.flagged}`\n        }), /*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          placeHolder: \"ex: email@email.com\",\n          onInput: setBack,\n          onBlur: checkValid,\n          ref: tRef,\n          type: \"email\",\n          name: \"email\",\n          className: `${tName != false ? '' : styles.flagged}`\n        }), /*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          placeHolder: \"xxxxxx\",\n          onInput: setBack,\n          onBlur: checkValid,\n          ref: foRef,\n          type: \"password\",\n          name: \"password\",\n          className: `${foName != false ? '' : styles.flagged}`\n        })]\n      }), /*#__PURE__*/_jsx(\"button\", {\n        onClick: signup,\n        className: inValidSignup ? styles.errBtn : styles.buttonSignUp,\n        children: \"Sign Up\"\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(Card, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Sign Up\"\n      })\n    }), \" \", /*#__PURE__*/_jsx(\"h1\", {\n      children: \"Signup Customer\"\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.buttonBusiness,\n      children: [\" \", /*#__PURE__*/_jsx(\"button\", {\n        children: \"\\u2190\"\n      }), /*#__PURE__*/_jsx(\"span\", {\n        children: \"\\u25C9\"\n      }), \"\\u25CE\", /*#__PURE__*/_jsx(\"span\", {}), /*#__PURE__*/_jsx(\"button\", {\n        onClick: businessHandler,\n        children: \"\\u2192\"\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.inputContainer,\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"first\",\n        children: \"First Name\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        placeHolder: \"First Name\",\n        onInput: setBack,\n        onBlur: checkValid,\n        type: \"text\",\n        ref: fRef,\n        name: \"first\",\n        className: `${fName != false ? '' : styles.flagged}`\n      }), /*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"last\",\n        children: \"Last Name\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        placeHolder: \"Last Name\",\n        onInput: setBack,\n        onBlur: checkValid,\n        ref: sRef,\n        type: \"text\",\n        name: \"last\",\n        className: `${sName != false ? '' : styles.flagged}`\n      }), /*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        placeHolder: \"ex: email@email.com\",\n        onInput: setBack,\n        onBlur: checkValid,\n        ref: tRef,\n        type: \"email\",\n        name: \"email\",\n        className: `${tName != false ? '' : styles.flagged}`\n      }), /*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        placeHolder: \"xxxxxx\",\n        onInput: setBack,\n        onBlur: checkValid,\n        ref: foRef,\n        type: \"password\",\n        name: \"password\",\n        className: `${foName != false ? '' : styles.flagged}`\n      })]\n    }), /*#__PURE__*/_jsx(\"button\", {\n      onClick: signup,\n      className: inValidSignup ? styles.errBtn : styles.buttonSignUp,\n      children: \"Sign Up\"\n    })]\n  });\n};\n\nexport default signup;","map":null,"metadata":{},"sourceType":"module"}