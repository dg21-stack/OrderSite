{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/gaida/Documents/React/FoodOrderingSite/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"C:/Users/gaida/Documents/React/FoodOrderingSite/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _asyncToGenerator from \"C:/Users/gaida/Documents/React/FoodOrderingSite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Card from \"../../components/Card/Card\";\nimport { useContext, useState, useEffect } from \"react\";\nimport AuthContext from \"../../components/store/use-context\";\nimport ModalCart from \"../../components/Cart/ModalCart\";\nimport styles from './checkout.module.css';\nimport Link from 'next/link';\nimport { useRouter } from \"next/router\";\nimport Head from \"next/head\";\nvar cardRegex = /^4[0-9]{12}(?:[0-9]{3})?$/;\nvar dateRegex = /^(0[1-9]|1[0-2])\\/?([0-9]{2})$/;\n\nvar checkout = function checkout() {\n  var authCtx = useContext(AuthContext);\n  var router = useRouter();\n  useEffect(function () {\n    if (!authCtx.isLoggedIn) {\n      router.push('/');\n    }\n\n    if (authCtx.isBusiness) {\n      router.push('/business');\n    }\n  }, [authCtx.isLoggedIn]);\n\n  var _useState = useState({\n    address: '',\n    zipCode: '',\n    city: '',\n    state: '',\n    phoneNumber: '',\n    card: '',\n    cvv: '',\n    expirationDate: ''\n  }),\n      checkoutInfo = _useState[0],\n      setCheckoutInfo = _useState[1];\n\n  var _useState2 = useState(null),\n      trueAdd = _useState2[0],\n      setTrueAdd = _useState2[1];\n\n  var _useState3 = useState(null),\n      trueZip = _useState3[0],\n      setTrueZip = _useState3[1];\n\n  var _useState4 = useState(null),\n      trueCity = _useState4[0],\n      setTrueCity = _useState4[1];\n\n  var _useState5 = useState(null),\n      trueState = _useState5[0],\n      setTrueState = _useState5[1];\n\n  var _useState6 = useState(null),\n      truePhone = _useState6[0],\n      setTruePhone = _useState6[1];\n\n  var _useState7 = useState(null),\n      trueCard = _useState7[0],\n      setTrueCard = _useState7[1];\n\n  var _useState8 = useState(null),\n      trueCvv = _useState8[0],\n      setTrueCvv = _useState8[1];\n\n  var _useState9 = useState(null),\n      trueExpir = _useState9[0],\n      setTrueExpir = _useState9[1];\n\n  var _useState10 = useState(null),\n      invalidSubmission = _useState10[0],\n      setInvalidSubmission = _useState10[1];\n\n  var _useState11 = useState(false),\n      isCheckedOut = _useState11[0],\n      setIsCheckedOut = _useState11[1];\n\n  var checkoutSetter = function checkoutSetter(e) {\n    setCheckoutInfo(function (prev) {\n      if (e.target.name === 'address') {\n        if (e.target.value.length > 1) {\n          prev.address = e.target.value;\n          setTrueAdd(true);\n          return prev;\n        }\n\n        setInvalidSubmission(true);\n        setTrueAdd(false);\n        return prev;\n      }\n\n      if (e.target.name === 'zip code') {\n        if (e.target.value.length === 5) {\n          prev.zipCode = e.target.value;\n          setTrueZip(true);\n          return prev;\n        }\n\n        setInvalidSubmission(true);\n        setTrueZip(false);\n        return prev;\n      }\n\n      if (e.target.name === 'city') {\n        if (e.target.value.length > 1) {\n          prev.city = e.target.value;\n          setTrueCity(true);\n          setInvalidSubmission(false);\n          return prev;\n        }\n\n        setInvalidSubmission(true);\n        setTrueCity(false);\n        return prev;\n      }\n\n      if (e.target.name === 'state') {\n        if (e.target.value.length > 1) {\n          prev.state = e.target.value;\n          setTrueState(true);\n          return prev;\n        }\n\n        setInvalidSubmission(true);\n        setTrueState(false);\n        return prev;\n      }\n\n      if (e.target.name === 'phone') {\n        if (e.target.value.length === 10) {\n          prev.phoneNumber = e.target.value;\n          setTruePhone(true);\n          return prev;\n        }\n\n        setInvalidSubmission(true);\n        setTruePhone(false);\n        return prev;\n      }\n\n      if (e.target.name === 'card') {\n        if (cardRegex.test(e.target.value)) {\n          prev.card = e.target.value;\n          setTrueCard(true);\n          return prev;\n        }\n\n        setInvalidSubmission(true);\n        setTrueCard(false);\n        return prev;\n      }\n\n      if (e.target.name === 'cvv') {\n        if (e.target.value.length === 3 && !isNaN(e.target.value)) {\n          prev.cvv = e.target.value;\n          setTrueCvv(true);\n          return prev;\n        }\n\n        setInvalidSubmission(true);\n        setTrueCvv(false);\n        return prev;\n      }\n\n      if (e.target.name === 'expiration date') {\n        if (dateRegex.test(e.target.value)) {\n          prev.expirationDate = e.target.value;\n          setTrueExpir(true);\n          return prev;\n        }\n\n        setInvalidSubmission(true);\n        setTrueExpir(false);\n        return prev;\n      }\n    });\n  };\n\n  function addItemHandler(_x) {\n    return _addItemHandler.apply(this, arguments);\n  }\n\n  function _addItemHandler() {\n    _addItemHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var errStr, checkoutCart, values, checkoutInfoList, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              errStr = '';\n\n              if (!trueAdd) {\n                errStr += ' invalid Address,';\n              }\n\n              if (!trueZip) {\n                errStr += ' invalid Zip Code,';\n              }\n\n              if (!truePhone) {\n                errStr += ' invalid Phone Number,';\n              }\n\n              if (!trueCity) {\n                errStr += ' invalid City,';\n              }\n\n              if (!trueState) {\n                errStr += ' invalid State,';\n              }\n\n              if (!trueCvv) {\n                errStr += ' invalid CVV,';\n              }\n\n              if (!trueExpir) {\n                errStr += ' invalid Expiration Date,';\n              }\n\n              errStr = errStr.slice(0, -1);\n\n              if (!invalidSubmission) {\n                _context.next = 15;\n                break;\n              }\n\n              alert(errStr);\n              return _context.abrupt(\"return\");\n\n            case 15:\n              if (invalidSubmission) {\n                _context.next = 27;\n                break;\n              }\n\n              checkoutCart = [];\n\n              for (values in authCtx.currCart) {\n                if (authCtx.currCart[values].total > 0) {\n                  checkoutCart.push(authCtx.currCart[values]);\n                }\n              }\n\n              checkoutInfoList = _objectSpread(_objectSpread({}, checkoutInfo), {}, {\n                cart: checkoutCart,\n                price: '$' + authCtx.totalprice + '.00',\n                items: authCtx.items\n              });\n              _context.next = 21;\n              return fetch('../api/checkoutHandler', {\n                method: 'POST',\n                body: JSON.stringify({\n                  item: checkoutInfoList,\n                  email: authCtx.token\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 21:\n              response = _context.sent;\n              _context.next = 24;\n              return response.json();\n\n            case 24:\n              data = _context.sent;\n              setIsCheckedOut(true);\n              authCtx.checkout();\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addItemHandler.apply(this, arguments);\n  }\n\n  var buttonSetter = function buttonSetter() {\n    setInvalidSubmission(null);\n  };\n\n  if (isCheckedOut) {\n    return /*#__PURE__*/_jsxs(Card, {\n      children: [\" \", /*#__PURE__*/_jsx(Link, {\n        href: \"/AllRestaurants\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: styles.signup,\n          children: /*#__PURE__*/_jsx(\"b\", {\n            children: \" Continue Shopping!\"\n          })\n        })\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(Card, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Checkout\"\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.title,\n      children: [\"Hello, \", authCtx.user, \". Checkout here!\"]\n    }), /*#__PURE__*/_jsxs(\"form\", {\n      className: styles.label,\n      onSubmit: addItemHandler,\n      children: [/*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsxs(\"ul\", {\n        children: [/*#__PURE__*/_jsxs(\"li\", {\n          className: styles.left,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"Address\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              onInput: buttonSetter,\n              onBlur: checkoutSetter,\n              name: \"address\",\n              placeholder: \"ex: 7 Classy Blvd\",\n              className: trueAdd != false ? styles.input : styles.flagged\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"Zip Code\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              onInput: buttonSetter,\n              onBlur: checkoutSetter,\n              name: \"zip code\",\n              placeholder: \"xxxxx\",\n              className: trueZip != false ? styles.input : styles.flagged\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"City\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              onInput: buttonSetter,\n              onBlur: checkoutSetter,\n              name: \"city\",\n              placeholder: \"ex: New York City\",\n              className: trueCity != false ? styles.input : styles.flagged\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"State\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              onInput: buttonSetter,\n              onBlur: checkoutSetter,\n              name: \"state\",\n              placeholder: \"ex: NY\",\n              className: trueState != false ? styles.input : styles.flagged\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"Phone Number\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              onInput: buttonSetter,\n              onBlur: checkoutSetter,\n              name: \"phone\",\n              placeholder: \"ex: xxx-xxx-xxxx\",\n              className: truePhone != false ? styles.input : styles.flagged\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"Card\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              onInput: buttonSetter,\n              onBlur: checkoutSetter,\n              name: \"card\",\n              placeholder: \"xxxx-xxxx-xxxx-xxxx\",\n              className: trueCard != false ? styles.input : styles.flagged\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"CVV\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              onInput: buttonSetter,\n              onBlur: checkoutSetter,\n              name: \"cvv\",\n              placeholder: \"xxx\",\n              className: trueCvv != false ? styles.input : styles.flagged\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"Expiration Date\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              onInput: buttonSetter,\n              onBlur: checkoutSetter,\n              name: \"expiration date\",\n              placeholder: \"xx/xx\",\n              className: trueExpir != false ? styles.input : styles.flagged\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.total,\n        children: [\"Your Total is $\", authCtx.totalprice, \".00 for \", authCtx.items, \" \", authCtx.items > 1 ? 'items' : 'item']\n      }), /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(\"button\", {\n          className: invalidSubmission == true ? styles.errBtn : styles.normBtn,\n          children: \"place order\"\n        })\n      })]\n    }), authCtx.isOpen && /*#__PURE__*/_jsx(ModalCart, {})]\n  });\n};\n\nexport default checkout;","map":null,"metadata":{},"sourceType":"module"}