{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/gaida/Documents/React/FoodOrderingSite/node_modules/@babel/runtime/regenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _asyncToGenerator from \"C:/Users/gaida/Documents/React/FoodOrderingSite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport Card from \"../../components/Card/Card\";\nimport { useState, useRef, useContext, useEffect } from \"react\";\nimport styles from './signup.module.css';\nimport { useRouter } from 'next/router';\nimport AuthContext from \"../../components/store/use-context\";\nimport Head from \"next/head\";\n\nvar checkUpper = function checkUpper(string) {\n  var _iterator = _createForOfIteratorHelper(string),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var i = _step.value;\n\n      if (isNaN(i)) {\n        if (i == i.toUpperCase()) {\n          return true;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return false;\n};\n\nvar signup = function signup() {\n  var router = useRouter();\n  var fRef = useRef();\n  var sRef = useRef();\n  var tRef = useRef();\n  var foRef = useRef();\n  var authCtx = useContext(AuthContext);\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      isBusiness = _useState2[0],\n      setIsBusiness = _useState2[1];\n\n  var _useState3 = useState(null),\n      fName = _useState3[0],\n      setFName = _useState3[1];\n\n  var _useState4 = useState(null),\n      sName = _useState4[0],\n      setSName = _useState4[1];\n\n  var _useState5 = useState(null),\n      tName = _useState5[0],\n      setTName = _useState5[1];\n\n  var _useState6 = useState(null),\n      foName = _useState6[0],\n      setFoName = _useState6[1];\n\n  var _useState7 = useState(null),\n      inValidSignup = _useState7[0],\n      setInvalidSignUp = _useState7[1];\n\n  useEffect(function () {\n    if (authCtx.isBusiness && authCtx.isLoggedIn) {\n      router.push('/business');\n    }\n\n    if (!authCtx.isBusiness & authCtx.isLoggedIn) {\n      router.push('/AllRestaurants');\n    }\n  }, [authCtx.isLoggedIn]);\n\n  function addMeetupHandler(_x) {\n    return _addMeetupHandler.apply(this, arguments);\n  }\n\n  function _addMeetupHandler() {\n    _addMeetupHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(enteredMeetupData) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('../api/handler', {\n                method: 'POST',\n                body: JSON.stringify(enteredMeetupData),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addMeetupHandler.apply(this, arguments);\n  }\n\n  var businessHandler = function businessHandler() {\n    setIsBusiness(function (prevState) {\n      return !prevState;\n    });\n    fRef.current.value = '';\n    sRef.current.value = '';\n    tRef.current.value = '';\n    foRef.current.value = '';\n    setFName(null);\n    setSName(null);\n    setTName(null);\n    setFoName(null);\n  };\n\n  var signup = function signup() {\n    if (fName && sName & tName && foName) {\n      var accArr = {\n        firstName: fRef.current.value,\n        lastName: sRef.current.value,\n        email: tRef.current.value,\n        password: foRef.current.value\n      };\n      var enteredMeetupData = {\n        name: accArr.firstName,\n        address: accArr.lastName,\n        image: '',\n        description: '',\n        paragraph: '',\n        menu: [],\n        email: accArr.email\n      };\n      fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDRIvxAwx8KqrhXOQpIzkSave61memF2Uw', {\n        method: 'POST',\n        body: JSON.stringify({\n          email: accArr.email,\n          password: accArr.password,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        setIsLoading(false);\n\n        if (res.ok) {\n          if (!isBusiness) {\n            fetch(\"https://reactfirst-48147-default-rtdb.firebaseio.com/user/0.json\", {\n              method: 'POST',\n              body: JSON.stringify({\n                email: accArr.email,\n                firstName: accArr.firstName,\n                lastName: accArr.lastName\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then().then(function (r) {\n              router.push('/AllRestaurants');\n              authCtx.login(tRef.current.value, accArr.firstName, accArr.lastName, false);\n            });\n          } else {\n            addMeetupHandler(enteredMeetupData);\n            fetch(\"https://reactfirst-48147-default-rtdb.firebaseio.com/user/1.json\", {\n              method: 'POST',\n              body: JSON.stringify({\n                email: accArr.email,\n                businessName: accArr.firstName,\n                address: accArr.lastName\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then().then(function (r) {\n              router.push('/business');\n              authCtx.login(tRef.current.value, accArr.firstName, accArr.lastName, true);\n            });\n          }\n        } else {\n          return res.json().then(function (data) {\n            var errorMessage = 'Auth failed';\n\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            alert(errorMessage);\n          });\n        }\n      });\n    } else {\n      var errStr = \"ERROR:\";\n      setInvalidSignUp(true);\n\n      if (!fName) {\n        errStr += \" Invalid Name,\";\n      }\n\n      if (!sName) {\n        if (isBusiness) {\n          errStr += \" Invalid Address,\";\n        } else {\n          errStr += \" Invalid Last Name,\";\n        }\n      }\n\n      if (!tName) {\n        errStr += \" Invalid Email,\";\n      }\n\n      if (!foName) {\n        errStr += \" Invalid Password,\";\n      }\n\n      errStr = errStr.slice(0, -1);\n      alert(errStr);\n    }\n  };\n\n  var checkValid = function checkValid(e) {\n    setInvalidSignUp(true);\n\n    if (e.target.name === 'business' || e.target.name === 'first') {\n      if (e.target.value.length > 1) {\n        setFName(true);\n        return;\n      }\n\n      setFName(false);\n    }\n\n    if (e.target.name === 'address' || e.target.name === 'last') {\n      if (e.target.value.length > 1) {\n        setSName(true);\n        console.log('a');\n        return;\n      }\n\n      setSName(false);\n    }\n\n    if (e.target.name === 'email') {\n      if (e.target.value.length > 0 && (e.target.value.includes('.com') || e.target.value.includes('.net') || e.target.value.includes('.edu')) && e.target.value.includes('@')) {\n        setTName(true);\n        return;\n      }\n\n      setTName(false);\n    }\n\n    if (e.target.name === 'password') {\n      if (e.target.value.length > 6 && /\\d/.test(e.target.value) && checkUpper(e.target.value)) {\n        setFoName(true);\n        return;\n      }\n\n      setFoName(false);\n    }\n  };\n\n  var setBack = function setBack(e) {\n    if (e.target.name === 'business' || e.target.name === 'first') {\n      setFName(null);\n    } else if (e.target.name === 'address' || e.target.name === 'last') {\n      setSName(null);\n    } else if (e.target.name === 'email') {\n      setTName(null);\n    } else {\n      setFoName(null);\n    }\n  };\n\n  if (isBusiness) {\n    return /*#__PURE__*/_jsxs(Card, {\n      children: [\" \", /*#__PURE__*/_jsx(Head, {\n        children: /*#__PURE__*/_jsx(\"title\", {\n          children: \"Sign Up\"\n        })\n      }), /*#__PURE__*/_jsx(\"h1\", {\n        children: \"Signup Business\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.buttonBusiness,\n        children: [\" \", /*#__PURE__*/_jsx(\"button\", {\n          onClick: businessHandler,\n          children: \"\\u2190\"\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: \"\\u25CE\"\n        }), \"\\u25C9\", /*#__PURE__*/_jsx(\"span\", {}), /*#__PURE__*/_jsx(\"button\", {\n          children: \"\\u2192\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"business\",\n          children: \"Business Name\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          placeHolder: \"ex: fancy business\",\n          onInput: setBack,\n          onBlur: checkValid,\n          ref: fRef,\n          name: \"business\",\n          className: \"\".concat(fName != false ? '' : styles.flagged)\n        }), /*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          placeHolder: \"ex: 7 business rd\",\n          onInput: setBack,\n          onBlur: checkValid,\n          ref: sRef,\n          type: \"text\",\n          name: \"address\",\n          className: \"\".concat(sName != false ? '' : styles.flagged)\n        }), /*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          placeHolder: \"ex: email@email.com\",\n          onInput: setBack,\n          onBlur: checkValid,\n          ref: tRef,\n          type: \"email\",\n          name: \"email\",\n          className: \"\".concat(tName != false ? '' : styles.flagged)\n        }), /*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          placeHolder: \"xxxxxx\",\n          onInput: setBack,\n          onBlur: checkValid,\n          ref: foRef,\n          type: \"password\",\n          name: \"password\",\n          className: \"\".concat(foName != false ? '' : styles.flagged)\n        })]\n      }), /*#__PURE__*/_jsx(\"button\", {\n        onClick: signup,\n        className: inValidSignup ? styles.errBtn : styles.buttonSignUp,\n        children: \"Sign Up\"\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(Card, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Sign Up\"\n      })\n    }), \" \", /*#__PURE__*/_jsx(\"h1\", {\n      children: \"Signup Customer\"\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.buttonBusiness,\n      children: [\" \", /*#__PURE__*/_jsx(\"button\", {\n        children: \"\\u2190\"\n      }), /*#__PURE__*/_jsx(\"span\", {\n        children: \"\\u25C9\"\n      }), \"\\u25CE\", /*#__PURE__*/_jsx(\"span\", {}), /*#__PURE__*/_jsx(\"button\", {\n        onClick: businessHandler,\n        children: \"\\u2192\"\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.inputContainer,\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"first\",\n        children: \"First Name\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        placeHolder: \"First Name\",\n        onInput: setBack,\n        onBlur: checkValid,\n        type: \"text\",\n        ref: fRef,\n        name: \"first\",\n        className: \"\".concat(fName != false ? '' : styles.flagged)\n      }), /*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"last\",\n        children: \"Last Name\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        placeHolder: \"Last Name\",\n        onInput: setBack,\n        onBlur: checkValid,\n        ref: sRef,\n        type: \"text\",\n        name: \"last\",\n        className: \"\".concat(sName != false ? '' : styles.flagged)\n      }), /*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        placeHolder: \"ex: email@email.com\",\n        onInput: setBack,\n        onBlur: checkValid,\n        ref: tRef,\n        type: \"email\",\n        name: \"email\",\n        className: \"\".concat(tName != false ? '' : styles.flagged)\n      }), /*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        placeHolder: \"xxxxxx\",\n        onInput: setBack,\n        onBlur: checkValid,\n        ref: foRef,\n        type: \"password\",\n        name: \"password\",\n        className: \"\".concat(foName != false ? '' : styles.flagged)\n      })]\n    }), /*#__PURE__*/_jsx(\"button\", {\n      onClick: signup,\n      className: inValidSignup ? styles.errBtn : styles.buttonSignUp,\n      children: \"Sign Up\"\n    })]\n  });\n};\n\nexport default signup;","map":null,"metadata":{},"sourceType":"module"}