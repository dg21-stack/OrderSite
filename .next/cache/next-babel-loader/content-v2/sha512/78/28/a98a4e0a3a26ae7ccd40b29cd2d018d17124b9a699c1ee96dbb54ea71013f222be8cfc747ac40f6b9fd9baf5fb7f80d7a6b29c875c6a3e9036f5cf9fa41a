{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport DetailCard from \"../../../components/Card/DetailCard\";\nimport { useContext, useSearchParams, useState, useEffect } from \"react\";\nimport AuthContext from \"../../../components/store/use-context\";\nimport Image from \"../../../components/Details/image\";\nimport Details from '../../../components/Details/Details';\nimport Menu from \"../../../components/Details/Menu\";\nimport ItemCard from \"../../../components/Card/ItemCard\";\nimport ModalCart from \"../../../components/Cart/ModalCart\";\nimport ReviewPage from \"../../../components/Details/ReviewPage\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\n\nconst businessDetails = props => {\n  var _props$restaurant, _props$restaurant2, _props$restaurant3, _props$restaurant4, _props$restaurant5, _props$restaurant6;\n\n  const {\n    0: pageNum,\n    1: setPageNum\n  } = useState(1);\n  const {\n    0: totalNum,\n    1: setTotalNum\n  } = useState(null);\n  const {\n    0: reviewList,\n    1: setReviewList\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n\n  async function getter(enteredItemData = 1) {\n    setIsLoading(true);\n    const response = await fetch(`../api/getHandler?pageIndex=${enteredItemData}&pageSize=2&restaurantURL=${window.location.pathname}`, {\n      method: 'GET'\n    });\n    const data = await response.json();\n    setIsLoading(false);\n\n    if (!totalNum) {\n      var _data$0$totalRecords$;\n\n      setTotalNum(data[0].totalRecords[0] ? parseInt((_data$0$totalRecords$ = data[0].totalRecords[0]) === null || _data$0$totalRecords$ === void 0 ? void 0 : _data$0$totalRecords$.body) : 1);\n    }\n\n    setReviewList(data[0].data);\n  }\n\n  useEffect(() => {\n    getter();\n  }, []);\n\n  const plus = () => {\n    setPageNum(prevVal => {\n      if (totalNum / 2 > prevVal) {\n        prevVal++;\n        getter(prevVal);\n      }\n\n      return prevVal;\n    });\n  };\n\n  const minus = () => {\n    setPageNum(prevVal => {\n      if (prevVal > 1) {\n        prevVal--;\n        getter(prevVal);\n      }\n\n      return prevVal;\n    });\n  };\n\n  async function addReviewHandler(enteredItemData) {\n    const response = await fetch('../api/ReviewHandler', {\n      method: 'POST',\n      body: JSON.stringify({\n        subject: enteredItemData.subject,\n        body: enteredItemData.body,\n        date: enteredItemData.date,\n        stars: enteredItemData.stars,\n        restaurant: props.restaurant.id,\n        user: authCtx.user\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n  }\n\n  const authCtx = useContext(AuthContext);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: {\n      marginLeft: '8vw',\n      marginRight: '8vw',\n      marginBottom: '10vw'\n    },\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: (_props$restaurant = props.restaurant) === null || _props$restaurant === void 0 ? void 0 : _props$restaurant.name\n      })\n    }), /*#__PURE__*/_jsx(DetailCard, {\n      children: /*#__PURE__*/_jsx(Image, {\n        image: (_props$restaurant2 = props.restaurant) === null || _props$restaurant2 === void 0 ? void 0 : _props$restaurant2.image,\n        details: (_props$restaurant3 = props.restaurant) === null || _props$restaurant3 === void 0 ? void 0 : _props$restaurant3.name,\n        subtitle: (_props$restaurant4 = props.restaurant) === null || _props$restaurant4 === void 0 ? void 0 : _props$restaurant4.description\n      })\n    }), /*#__PURE__*/_jsx(DetailCard, {\n      children: /*#__PURE__*/_jsx(Details, {\n        description: (_props$restaurant5 = props.restaurant) === null || _props$restaurant5 === void 0 ? void 0 : _props$restaurant5.paragraph\n      })\n    }), /*#__PURE__*/_jsx(ItemCard, {\n      children: /*#__PURE__*/_jsx(Menu, {\n        menu: (_props$restaurant6 = props.restaurant) === null || _props$restaurant6 === void 0 ? void 0 : _props$restaurant6.menu\n      })\n    }), /*#__PURE__*/_jsx(ItemCard, {\n      children: /*#__PURE__*/_jsx(ReviewPage, {\n        addReviewHandler: addReviewHandler,\n        total: totalNum,\n        isLoading: isLoading,\n        getter: getter,\n        pageNum: pageNum,\n        reviewList: reviewList,\n        plus: plus,\n        minus: minus\n      })\n    }), authCtx.isOpen && /*#__PURE__*/_jsx(ModalCart, {})]\n  });\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('reviewList');\n  const meetups = await meetupsCollection.find({}, {\n    restaurant: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: \"blocking\",\n    paths: meetups.map(meetup => ({\n      params: {\n        businessId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.businessId;\n  const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\n  const db = client.db();\n  const resCollection = db.collection('ResList');\n  const res = await resCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      restaurant: res ? {\n        name: res.name,\n        address: res === null || res === void 0 ? void 0 : res.address,\n        image: res === null || res === void 0 ? void 0 : res.image,\n        id: res === null || res === void 0 ? void 0 : res._id.toString(),\n        description: res === null || res === void 0 ? void 0 : res.description,\n        menu: res === null || res === void 0 ? void 0 : res.menu,\n        paragraph: res === null || res === void 0 ? void 0 : res.paragraph\n      } : null\n    },\n    revalidate: 10\n  };\n}\nexport default businessDetails;","map":null,"metadata":{},"sourceType":"module"}