{"ast":null,"code":"import { MongoClient } from 'mongodb';\n\nasync function getResListHandler(req, res) {\n  if (req.method === 'GET') {\n    const data = req.body;\n    const name = req.query.name;\n    const page = req.query.pageIndex ? parseInt(req.query.pageIndex) : 1;\n    const limit = req.query.pageSize ? parseInt(req.query.pageSize) : 3;\n    const skip = (page - 1) * limit;\n    const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupsCollection = db.collection('ResList');\n    const result = await meetupsCollection.aggregate([{\n      $facet: {\n        totalRecords: [{\n          $match: {\n            name: {\n              $regex: req.query.name\n            }\n          }\n        }, {\n          $count: 'description'\n        }],\n        data: [{\n          $match: {\n            name: {\n              $regex: req.query.name\n            }\n          }\n        }, {\n          $skip: skip\n        }, {\n          $limit: limit\n        }]\n      }\n    }]).toArray();\n    console.log(result);\n    const ressy = [{\n      totalRecords: result[0].totalRecords,\n      data: result[0].data.map(meetup => ({\n        address: meetup.address,\n        description: meetup.description,\n        image: meetup.image,\n        id: meetup._id.toString(),\n        menu: meetup.menu,\n        name: meetup.name\n      }))\n    }];\n    client.close();\n    res.send(ressy);\n  }\n}\n\n;\nexport default getResListHandler;","map":{"version":3,"sources":["C:/Users/gaida/Documents/React/FoodOrderingSite/pages/api/getResListHandler.js"],"names":["MongoClient","getResListHandler","req","res","method","data","body","name","query","page","pageIndex","parseInt","limit","pageSize","skip","client","connect","db","meetupsCollection","collection","result","aggregate","$facet","totalRecords","$match","$regex","$count","$skip","$limit","toArray","console","log","ressy","map","meetup","address","description","image","id","_id","toString","menu","close","send"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,SAA1B;;AAEA,eAAeC,iBAAf,CAAiCC,GAAjC,EAAsCC,GAAtC,EAA2C;AAEvC,MAAID,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAAyB;AACrB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACJ,UAAMC,IAAI,GAAGL,GAAG,CAACM,KAAJ,CAAUD,IAAvB;AACA,UAAME,IAAI,GAAGP,GAAG,CAACM,KAAJ,CAAUE,SAAV,GAAsBC,QAAQ,CAACT,GAAG,CAACM,KAAJ,CAAUE,SAAX,CAA9B,GAAsD,CAAnE;AACA,UAAME,KAAK,GAAGV,GAAG,CAACM,KAAJ,CAAUK,QAAV,GAAqBF,QAAQ,CAACT,GAAG,CAACM,KAAJ,CAAUK,QAAX,CAA7B,GAAoD,CAAlE;AACA,UAAMC,IAAI,GAAG,CAACL,IAAI,GAAG,CAAR,IAAaG,KAA1B;AACA,UAAMG,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAZ,CACjB,+GADiB,CAArB;AAEE,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACF,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,UAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4B,CAC7C;AACAC,MAAAA,MAAM,EAAE;AACJC,QAAAA,YAAY,EAAE,CAAC;AAACC,UAAAA,MAAM,EAAE;AAACjB,YAAAA,IAAI,EAAG;AAACkB,cAAAA,MAAM,EAAEvB,GAAG,CAACM,KAAJ,CAAUD;AAAnB;AAAR;AAAT,SAAD,EAA6C;AAACmB,UAAAA,MAAM,EAAE;AAAT,SAA7C,CADV;AAEJrB,QAAAA,IAAI,EAAG,CAAC;AAACmB,UAAAA,MAAM,EAAE;AAACjB,YAAAA,IAAI,EAAG;AAACkB,cAAAA,MAAM,EAAEvB,GAAG,CAACM,KAAJ,CAAUD;AAAnB;AAAR;AAAT,SAAD,EAA6C;AAACoB,UAAAA,KAAK,EAAEb;AAAR,SAA7C,EAA2D;AAACc,UAAAA,MAAM,EAAEhB;AAAT,SAA3D;AAFH;AADR,KAD6C,CAA5B,EAQlBiB,OARkB,EAArB;AASAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACA,UAAMY,KAAK,GAAG,CAAC;AACXT,MAAAA,YAAY,EAAEH,MAAM,CAAC,CAAD,CAAN,CAAUG,YADb;AAEXlB,MAAAA,IAAI,EAAEe,MAAM,CAAC,CAAD,CAAN,CAAUf,IAAV,CAAe4B,GAAf,CAAmBC,MAAM,KAAK;AAChCC,QAAAA,OAAO,EAAED,MAAM,CAACC,OADgB;AAEhCC,QAAAA,WAAW,EAAEF,MAAM,CAACE,WAFY;AAGhCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHkB;AAIhCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX,EAJ4B;AAKhCC,QAAAA,IAAI,EAAEP,MAAM,CAACO,IALmB;AAMhClC,QAAAA,IAAI,EAAE2B,MAAM,CAAC3B;AANmB,OAAL,CAAzB;AAFK,KAAD,CAAd;AAWAQ,IAAAA,MAAM,CAAC2B,KAAP;AACAvC,IAAAA,GAAG,CAACwC,IAAJ,CAASX,KAAT;AAEC;AAEJ;;AAAA;AAED,eAAe/B,iBAAf","sourcesContent":["import {MongoClient} from 'mongodb';\r\n\r\nasync function getResListHandler(req, res) {\r\n\r\n    if (req.method === 'GET'){\r\n        const data = req.body;\r\n    const name = req.query.name;\r\n    const page = req.query.pageIndex ? parseInt(req.query.pageIndex) : 1;\r\n    const limit = req.query.pageSize ? parseInt(req.query.pageSize) : 3;\r\n    const skip = (page - 1) * limit;\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority'  );\r\n      const db = client.db();\r\n    const meetupsCollection = db.collection('ResList');\r\n    const result = await meetupsCollection.aggregate([\r\n        {\r\n        $facet: {\r\n            totalRecords: [{$match: {name : {$regex: req.query.name}}},{$count: 'description'}],\r\n            data : [{$match: {name : {$regex: req.query.name}}},{$skip: skip},{$limit: limit}]\r\n        }\r\n        }\r\n        \r\n    ]).toArray();\r\n    console.log(result);\r\n    const ressy = [{\r\n        totalRecords: result[0].totalRecords,\r\n        data: result[0].data.map(meetup => ({\r\n            address: meetup.address,\r\n            description: meetup.description,\r\n            image: meetup.image,\r\n            id: meetup._id.toString(),\r\n            menu: meetup.menu,\r\n            name: meetup.name\r\n        }))\r\n    }]\r\n    client.close();\r\n    res.send(ressy);\r\n    \r\n    }\r\n\r\n};\r\n\r\nexport default getResListHandler;"]},"metadata":{},"sourceType":"module"}