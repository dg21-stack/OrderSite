{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\dgaidar\\\\Documents\\\\VScode\\\\React\\\\FoodOrderingSite\\\\pages\\\\AllRestaurants\\\\index.js\";\nimport AuthContext from \"../../components/store/use-context\";\nimport { Fragment, useContext, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Restaurant from \"../../components/RestaurantList/Restaurant\";\nimport { MongoClient } from \"mongodb\";\nimport ModalCart from \"../../components/Cart/ModalCart\";\nimport Card from \"../../components/Card/Card\";\nimport styles from '../../components/RestaurantList/RestaurantItem.module.css';\n\nconst AllRestaurants = props => {\n  const authCtx = useContext(AuthContext);\n  console.log(props);\n  const router = useRouter();\n  authCtx.pushMenu(props.res);\n  useEffect(() => {\n    if (!authCtx.isLoggedIn) {\n      router.push('/');\n    }\n\n    if (authCtx.isBusiness) {\n      router.push('/business');\n    }\n  }, [authCtx.isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userContainer,\n        children: [\"Welcome, \", authCtx.user, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.subtitle,\n        children: \"Be sure to Grab Something Tasty Here at ReactEats!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), authCtx.isOpen && /*#__PURE__*/_jsxDEV(ModalCart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Restaurant, {\n      res: props.res\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n};\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\n  const db = client.db();\n  const resCollection = db.collection('ResList');\n  const res = await resCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      res: res.map(r => ({\n        name: r.name,\n        address: r.address,\n        image: r.image,\n        id: r._id.toString(),\n        description: r.description,\n        menu: r.menu\n      }))\n    },\n    revalidate: 10\n  };\n}\nexport default AllRestaurants;","map":{"version":3,"sources":["C:/Users/dgaidar/Documents/VScode/React/FoodOrderingSite/pages/AllRestaurants/index.js"],"names":["AuthContext","Fragment","useContext","useEffect","useRouter","Restaurant","MongoClient","ModalCart","Card","styles","AllRestaurants","props","authCtx","console","log","router","pushMenu","res","isLoggedIn","push","isBusiness","userContainer","user","subtitle","isOpen","getStaticProps","client","connect","db","resCollection","collection","find","toArray","close","map","r","name","address","image","id","_id","toString","description","menu","revalidate"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,oCAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,MAAP,MAAmB,2DAAnB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAMC,OAAO,GAAGV,UAAU,CAACF,WAAD,CAA1B;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,QAAMI,MAAM,GAAGX,SAAS,EAAxB;AACAQ,EAAAA,OAAO,CAACI,QAAR,CAAiBL,KAAK,CAACM,GAAvB;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACS,OAAO,CAACM,UAAb,EAAwB;AACpBH,MAAAA,MAAM,CAACI,IAAP,CAAY,GAAZ;AACH;;AACD,QAAIP,OAAO,CAACQ,UAAZ,EAAuB;AACnBL,MAAAA,MAAM,CAACI,IAAP,CAAY,WAAZ;AACH;AACJ,GAPQ,EAOP,CAACP,OAAO,CAACM,UAAT,CAPO,CAAT;AAQA,sBAAO,QAAC,QAAD;AAAA,4BACH,QAAC,IAAD;AAAA,8BAAM;AAAK,QAAA,SAAS,EAAIT,MAAM,CAACY,aAAzB;AAAA,gCAAkDT,OAAO,CAACU,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN,eACA;AAAK,QAAA,SAAS,EAAIb,MAAM,CAACc,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,EAGFX,OAAO,CAACY,MAAR,iBAAkB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAHhB,eAIH,QAAC,UAAD;AACA,MAAA,GAAG,EAAIb,KAAK,CAACM;AADb;AAAA;AAAA;AAAA;AAAA,YAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAQH,CArBD;;AAuBA,OAAO,eAAeQ,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMpB,WAAW,CAACqB,OAAZ,CAAoB,+GAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,aAAa,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAtB;AACA,QAAMb,GAAG,GAAG,MAAMY,aAAa,CAACE,IAAd,GAAqBC,OAArB,EAAlB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AACA,SAAO;AACHtB,IAAAA,KAAK,EAAE;AACHM,MAAAA,GAAG,EAAEA,GAAG,CAACiB,GAAJ,CAAQC,CAAC,KAAK;AACfC,QAAAA,IAAI,EAAED,CAAC,CAACC,IADO;AAEfC,QAAAA,OAAO,EAAEF,CAAC,CAACE,OAFI;AAGfC,QAAAA,KAAK,EAAEH,CAAC,CAACG,KAHM;AAIfC,QAAAA,EAAE,EAAEJ,CAAC,CAACK,GAAF,CAAMC,QAAN,EAJW;AAKfC,QAAAA,WAAW,EAAEP,CAAC,CAACO,WALA;AAMfC,QAAAA,IAAI,EAAER,CAAC,CAACQ;AANO,OAAL,CAAT;AADF,KADJ;AAWHC,IAAAA,UAAU,EAAE;AAXT,GAAP;AAaH;AAGD,eAAelC,cAAf","sourcesContent":["import AuthContext from \"../../components/store/use-context\";\r\nimport { Fragment, useContext, useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Restaurant from \"../../components/RestaurantList/Restaurant\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport ModalCart from \"../../components/Cart/ModalCart\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport styles from '../../components/RestaurantList/RestaurantItem.module.css';\r\n\r\nconst AllRestaurants = (props) => {\r\n    const authCtx = useContext(AuthContext);\r\n    console.log(props);\r\n    const router = useRouter();\r\n    authCtx.pushMenu(props.res);\r\n    useEffect(() => {\r\n        if (!authCtx.isLoggedIn){\r\n            router.push('/')\r\n        }\r\n        if (authCtx.isBusiness){\r\n            router.push('/business');\r\n        }\r\n    },[authCtx.isLoggedIn])\r\n    return <Fragment>\r\n        <Card><div className = {styles.userContainer}>Welcome, {authCtx.user}!</div>\r\n        <div className = {styles.subtitle}>Be sure to Grab Something Tasty Here at ReactEats!</div></Card>\r\n        {authCtx.isOpen && <ModalCart/>}\r\n        <Restaurant \r\n        res = {props.res}\r\n        />\r\n        </Fragment>\r\n}\r\n\r\nexport async function getStaticProps() {\r\n    const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const resCollection = db.collection('ResList');\r\n    const res = await resCollection.find().toArray();\r\n  \r\n    client.close();\r\n    return {\r\n        props: {\r\n            res: res.map(r => ({\r\n                name: r.name,\r\n                address: r.address,\r\n                image: r.image,\r\n                id: r._id.toString(),\r\n                description: r.description,\r\n                menu: r.menu\r\n            }))\r\n        },\r\n        revalidate: 10\r\n    };\r\n}\r\n\r\n\r\nexport default AllRestaurants;\r\n\r\n"]},"metadata":{},"sourceType":"module"}