{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gaida\\\\Documents\\\\React\\\\FoodOrderingSite\\\\pages\\\\AllRestaurants\\\\[businessId]\\\\index.js\";\nimport DetailCard from \"../../../components/Card/DetailCard\";\nimport { useContext, useSearchParams, useState, useEffect } from \"react\";\nimport AuthContext from \"../../../components/store/use-context\";\nimport Image from \"../../../components/Details/image\";\nimport Details from '../../../components/Details/Details';\nimport Menu from \"../../../components/Details/Menu\";\nimport ItemCard from \"../../../components/Card/ItemCard\";\nimport ModalCart from \"../../../components/Cart/ModalCart\";\nimport ReviewPage from \"../../../components/Details/ReviewPage\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\n\nconst businessDetails = props => {\n  var _props$restaurant, _props$restaurant2, _props$restaurant3, _props$restaurant4, _props$restaurant5, _props$restaurant6;\n\n  const {\n    0: pageNum,\n    1: setPageNum\n  } = useState(1);\n  const {\n    0: totalNum,\n    1: setTotalNum\n  } = useState(null);\n  const {\n    0: reviewList,\n    1: setReviewList\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n\n  async function getter(enteredItemData = 1) {\n    setIsLoading(true);\n    const response = await fetch(`../api/getHandler?pageIndex=${enteredItemData}&pageSize=2&restaurantURL=${window.location.pathname}`, {\n      method: 'GET'\n    });\n    const data = await response.json();\n    setIsLoading(false);\n\n    if (!totalNum) {\n      var _data$0$totalRecords$;\n\n      setTotalNum(data[0].totalRecords[0] ? parseInt((_data$0$totalRecords$ = data[0].totalRecords[0]) === null || _data$0$totalRecords$ === void 0 ? void 0 : _data$0$totalRecords$.body) : 1);\n    }\n\n    setReviewList(data[0].data);\n  }\n\n  useEffect(() => {\n    getter();\n  }, []);\n\n  const plus = () => {\n    setPageNum(prevVal => {\n      if (totalNum / 2 > prevVal) {\n        prevVal++;\n        getter(prevVal);\n      }\n\n      return prevVal;\n    });\n  };\n\n  const minus = () => {\n    setPageNum(prevVal => {\n      if (prevVal > 1) {\n        prevVal--;\n        getter(prevVal);\n      }\n\n      return prevVal;\n    });\n  };\n\n  async function addReviewHandler(enteredItemData) {\n    const response = await fetch('../api/ReviewHandler', {\n      method: 'POST',\n      body: JSON.stringify({\n        subject: enteredItemData.subject,\n        body: enteredItemData.body,\n        date: enteredItemData.date,\n        stars: enteredItemData.stars,\n        restaurant: props.restaurant.id,\n        user: authCtx.user\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n  }\n\n  const authCtx = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '8vw',\n      marginRight: '8vw',\n      marginBottom: '10vw'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: (_props$restaurant = props.restaurant) === null || _props$restaurant === void 0 ? void 0 : _props$restaurant.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DetailCard, {\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        image: (_props$restaurant2 = props.restaurant) === null || _props$restaurant2 === void 0 ? void 0 : _props$restaurant2.image,\n        details: (_props$restaurant3 = props.restaurant) === null || _props$restaurant3 === void 0 ? void 0 : _props$restaurant3.name,\n        subtitle: (_props$restaurant4 = props.restaurant) === null || _props$restaurant4 === void 0 ? void 0 : _props$restaurant4.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DetailCard, {\n      children: /*#__PURE__*/_jsxDEV(Details, {\n        description: (_props$restaurant5 = props.restaurant) === null || _props$restaurant5 === void 0 ? void 0 : _props$restaurant5.paragraph\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ItemCard, {\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        menu: (_props$restaurant6 = props.restaurant) === null || _props$restaurant6 === void 0 ? void 0 : _props$restaurant6.menu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ItemCard, {\n      children: /*#__PURE__*/_jsxDEV(ReviewPage, {\n        addReviewHandler: addReviewHandler,\n        total: totalNum,\n        isLoading: isLoading,\n        getter: getter,\n        pageNum: pageNum,\n        reviewList: reviewList,\n        plus: plus,\n        minus: minus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), authCtx.isOpen && /*#__PURE__*/_jsxDEV(ModalCart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 12\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('reviewList');\n  const meetups = await meetupsCollection.find({}, {\n    restaurant: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: \"blocking\",\n    paths: meetups.map(meetup => ({\n      params: {\n        businessId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.businessId;\n  const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\n  const db = client.db();\n  const resCollection = db.collection('ResList');\n  const res = await resCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      restaurant: res ? {\n        name: res.name,\n        address: res === null || res === void 0 ? void 0 : res.address,\n        image: res === null || res === void 0 ? void 0 : res.image,\n        id: res === null || res === void 0 ? void 0 : res._id.toString(),\n        description: res === null || res === void 0 ? void 0 : res.description,\n        menu: res === null || res === void 0 ? void 0 : res.menu,\n        paragraph: res === null || res === void 0 ? void 0 : res.paragraph\n      } : null\n    },\n    revalidate: 10\n  };\n}\nexport default businessDetails;","map":{"version":3,"sources":["C:/Users/gaida/Documents/React/FoodOrderingSite/pages/AllRestaurants/[businessId]/index.js"],"names":["DetailCard","useContext","useSearchParams","useState","useEffect","AuthContext","Image","Details","Menu","ItemCard","ModalCart","ReviewPage","MongoClient","ObjectId","Head","businessDetails","props","pageNum","setPageNum","totalNum","setTotalNum","reviewList","setReviewList","isLoading","setIsLoading","getter","enteredItemData","response","fetch","window","location","pathname","method","data","json","totalRecords","parseInt","body","plus","prevVal","minus","addReviewHandler","JSON","stringify","subject","date","stars","restaurant","id","user","authCtx","headers","marginLeft","marginRight","marginBottom","name","image","description","paragraph","menu","isOpen","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","toArray","close","fallback","paths","map","meetup","params","businessId","_id","toString","getStaticProps","context","meetupId","resCollection","res","findOne","address","revalidate"],"mappings":"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","sourcesContent":["\r\nimport DetailCard from \"../../../components/Card/DetailCard\";\r\nimport { useContext, useSearchParams, useState, useEffect } from \"react\";\r\nimport AuthContext from \"../../../components/store/use-context\";\r\nimport Image from \"../../../components/Details/image\";\r\nimport Details from '../../../components/Details/Details';\r\nimport Menu from \"../../../components/Details/Menu\";\r\nimport ItemCard from \"../../../components/Card/ItemCard\";\r\nimport ModalCart from \"../../../components/Cart/ModalCart\";\r\nimport ReviewPage from \"../../../components/Details/ReviewPage\";\r\nimport { MongoClient, ObjectId, } from \"mongodb\";\r\nimport Head from \"next/head\";\r\n\r\nconst businessDetails = (props) => {\r\n    const [pageNum, setPageNum] = useState(1);\r\n    const [totalNum, setTotalNum] = useState(null);\r\n    const [reviewList, setReviewList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    async function getter(enteredItemData = 1) {\r\n        setIsLoading(true);\r\n        const response = await fetch(`../api/getHandler?pageIndex=${enteredItemData}&pageSize=2&restaurantURL=${window.location.pathname}`,\r\n        {\r\n            method: 'GET',\r\n        } );\r\n        const data = await response.json();\r\n        setIsLoading(false);\r\n        if (!totalNum){\r\n            setTotalNum(data[0].totalRecords[0] ? parseInt(data[0].totalRecords[0]?.body) : 1);\r\n        }\r\n        setReviewList(data[0].data);\r\n    }\r\n    useEffect(() => {\r\n        getter()\r\n    },[])\r\n    const plus = () => {\r\n        setPageNum(prevVal => {\r\n           \r\n            if (totalNum/2 > prevVal){\r\n            prevVal++;\r\n            getter(prevVal);\r\n            }\r\n            \r\n            return prevVal;\r\n        })\r\n    }\r\n    const minus = () => {\r\n        setPageNum(prevVal => {\r\n            if (prevVal > 1){\r\n            prevVal--;\r\n            getter(prevVal);\r\n            }\r\n            return prevVal;\r\n        })\r\n    }\r\n    async function addReviewHandler(enteredItemData) {\r\n        const response = await fetch('../api/ReviewHandler', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            subject: enteredItemData.subject,\r\n            body: enteredItemData.body,\r\n            date: enteredItemData.date,\r\n            stars: enteredItemData.stars,\r\n            restaurant: props.restaurant.id,\r\n            user: authCtx.user\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n    \r\n        const data = await response.json();\r\n        \r\n    }\r\n    const authCtx = useContext(AuthContext);\r\n   \r\n    \r\n    return <div style = {{marginLeft: '8vw', marginRight: '8vw', marginBottom: '10vw'}}>\r\n      <Head><title>{props.restaurant?.name}</title></Head>\r\n        <DetailCard><Image image = {props.restaurant?.image} details = {props.restaurant?.name} subtitle = {props.restaurant?.description}/></DetailCard>\r\n        <DetailCard><Details description = {props.restaurant?.paragraph}/></DetailCard>\r\n        <ItemCard><Menu menu = {props.restaurant?.menu}/></ItemCard>\r\n        <ItemCard><ReviewPage addReviewHandler = {addReviewHandler} total = {totalNum} isLoading = {isLoading} getter = {getter} pageNum = {pageNum} reviewList = {reviewList} plus = {plus} minus = {minus}/></ItemCard>\r\n        {authCtx.isOpen && <ModalCart/>}\r\n    </div>\r\n    \r\n}\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n      'mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority'  );\r\n      const db = client.db();\r\n\r\n      const meetupsCollection = db.collection('reviewList');\r\n      const meetups = await meetupsCollection.find({}, { restaurant: 1 }).toArray();\r\n   \r\n      client.close();\r\n    \r\n      return {\r\n        fallback: \"blocking\",\r\n        paths: meetups.map((meetup) => ({\r\n          params: { businessId: meetup._id.toString() },\r\n        })),\r\n      };\r\n  }\r\n  \r\n  export async function getStaticProps(context) {\r\n    // fetch data for a single meetup\r\n  \r\n    const meetupId = context.params.businessId;\r\n    const client = await MongoClient.connect(\r\n      'mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority'  );\r\n    const db = client.db();\r\n  \r\n    const resCollection = db.collection('ResList');\r\n    const res = await resCollection.findOne({\r\n        _id: ObjectId(meetupId)\r\n    })\r\n    client.close();\r\n    \r\n    return {\r\n      props: {\r\n        restaurant: res ? {\r\n            name: res.name,\r\n            address: res?.address,\r\n            image: res?.image,\r\n            id: res?._id.toString(),\r\n            description: res?.description,\r\n            menu: res?.menu,\r\n            paragraph: res?.paragraph\r\n        } : null\r\n      },\r\n      revalidate: 10\r\n    };\r\n  }\r\n\r\n\r\nexport default businessDetails;"]},"metadata":{},"sourceType":"module"}