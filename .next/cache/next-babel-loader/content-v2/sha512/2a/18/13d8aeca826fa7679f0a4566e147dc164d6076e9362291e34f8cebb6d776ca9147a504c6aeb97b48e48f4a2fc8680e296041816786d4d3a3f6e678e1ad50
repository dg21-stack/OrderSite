{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/dgaidar/Documents/VScode/React/FoodOrderingSite/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/Users/dgaidar/Documents/VScode/React/FoodOrderingSite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dgaidar\\\\Documents\\\\VScode\\\\React\\\\FoodOrderingSite\\\\pages\\\\AllRestaurants\\\\search\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport Card from \"../../../components/Card/Card\";\nimport AuthContext from \"../../../components/store/use-context\";\n\nvar search = function search() {\n  _s();\n\n  var authCtx = useContext(AuthContext);\n\n  var _useState = useState(null),\n      currSearch = _useState[0],\n      setCurrSearch = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      currData = _useState3[0],\n      setCurrData = _useState3[1];\n\n  useEffect(function () {\n    if (currSearch == null) {\n      setCurrSearch(authCtx.searchStr);\n      getter(currSearch);\n      console.log(currData);\n    }\n  }, [currSearch]);\n\n  function getter(_x) {\n    return _getter.apply(this, arguments);\n  }\n\n  function _getter() {\n    _getter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n      var enteredIndex,\n          response,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              enteredIndex = _args.length > 1 && _args[1] !== undefined ? _args[1] : 1;\n              setIsLoading(true);\n              _context.next = 4;\n              return fetch(\"../api/getResListHandler?name=\".concat(value, \"&pageIndex=\").concat(enteredIndex, \"&pageSize=3\"), {\n                method: 'GET'\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context.sent;\n              setCurrData(data[0].data);\n              console.log(data[0].data);\n              setIsLoading(false);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getter.apply(this, arguments);\n  }\n\n  var changeHandler = function changeHandler(e) {\n    setCurrSearch(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onInput: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, _this), currSearch]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(search, \"RTiFnOLPvdctlfYvt6CNWoGgupg=\");\n\nexport default search;","map":{"version":3,"sources":["C:/Users/dgaidar/Documents/VScode/React/FoodOrderingSite/pages/AllRestaurants/search/index.js"],"names":["useContext","useEffect","useState","Card","AuthContext","search","authCtx","currSearch","setCurrSearch","isLoading","setIsLoading","currData","setCurrData","searchStr","getter","console","log","value","enteredIndex","fetch","method","response","json","data","changeHandler","e","target"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AACjB,MAAMC,OAAO,GAAGN,UAAU,CAACI,WAAD,CAA1B;;AADiB,kBAEmBF,QAAQ,CAAC,IAAD,CAF3B;AAAA,MAEVK,UAFU;AAAA,MAEEC,aAFF;;AAAA,mBAGiBN,QAAQ,CAAC,KAAD,CAHzB;AAAA,MAGVO,SAHU;AAAA,MAGCC,YAHD;;AAAA,mBAIeR,QAAQ,CAAC,EAAD,CAJvB;AAAA,MAIVS,QAJU;AAAA,MAIAC,WAJA;;AAKjBX,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIM,UAAU,IAAI,IAAlB,EAAwB;AACxBC,MAAAA,aAAa,CAACF,OAAO,CAACO,SAAT,CAAb;AACAC,MAAAA,MAAM,CAACP,UAAD,CAAN;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACC;AACJ,GANQ,EAMN,CAACJ,UAAD,CANM,CAAT;;AALiB,WAYFO,MAZE;AAAA;AAAA;;AAAA;AAAA,uEAYjB,iBAAsBG,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4BC,cAAAA,YAA5B,2DAA2C,CAA3C;AACIR,cAAAA,YAAY,CAAC,IAAD,CAAZ;AADJ;AAAA,qBAE2BS,KAAK,yCAAkCF,KAAlC,wBAAqDC,YAArD,kBAC5B;AACIE,gBAAAA,MAAM,EAAE;AADZ,eAD4B,CAFhC;;AAAA;AAEUC,cAAAA,QAFV;AAAA;AAAA,qBAMuBA,QAAQ,CAACC,IAAT,EANvB;;AAAA;AAMUC,cAAAA,IANV;AAOIX,cAAAA,WAAW,CAACW,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAT,CAAX;AACAR,cAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAApB;AACAb,cAAAA,YAAY,CAAC,KAAD,CAAZ;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAZiB;AAAA;AAAA;;AAwBjB,MAAMc,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAO;AACzBjB,IAAAA,aAAa,CAACiB,CAAC,CAACC,MAAF,CAAST,KAAV,CAAb;AACH,GAFD;;AAGA,sBAAO,QAAC,IAAD;AAAA,4BACH;AAAO,MAAA,OAAO,EAAIO;AAAlB;AAAA;AAAA;AAAA;AAAA,aADG,EAEFjB,UAFE;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAGH,CA9BD;;GAAMF,M;;AAiCN,eAAeA,MAAf","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport Card from \"../../../components/Card/Card\";\r\nimport AuthContext from \"../../../components/store/use-context\";\r\nconst search = () => {\r\n    const authCtx = useContext(AuthContext);\r\n    const [currSearch, setCurrSearch] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [currData, setCurrData] = useState([])\r\n    useEffect(() => {\r\n        if (currSearch == null) {\r\n        setCurrSearch(authCtx.searchStr);\r\n        getter(currSearch);\r\n        console.log(currData);\r\n        }\r\n    }, [currSearch])\r\n    async function getter(value,enteredIndex = 1){\r\n        setIsLoading(true);\r\n        const response = await fetch(`../api/getResListHandler?name=${value}&pageIndex=${enteredIndex}&pageSize=3`,\r\n        {\r\n            method: 'GET',\r\n        } );\r\n        const data = await response.json();\r\n        setCurrData(data[0].data);\r\n        console.log(data[0].data);\r\n        setIsLoading(false);\r\n      \r\n    }\r\n    const changeHandler = (e) => {\r\n        setCurrSearch(e.target.value);\r\n    }\r\n    return <Card>\r\n        <input onInput = {changeHandler}/>\r\n        {currSearch}</Card>\r\n}\r\n\r\n\r\nexport default search; "]},"metadata":{},"sourceType":"module"}