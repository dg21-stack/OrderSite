{"ast":null,"code":"import { MongoClient } from 'mongodb';\n\nasync function getHandler(req, res) {\n  if (req.method === 'GET') {\n    const data = req.body;\n    console.log(req.query.pageIndex);\n    const page = req.query.pageIndex ? parseInt(req.query.pageIndex) : 1;\n    const limit = req.query.pageSize ? parseInt(req.query.pageSize) : 2;\n    const currURLLimiter = req.query.restaurantURL.slice(16);\n    const skip = (page - 1) * limit;\n    console.log(currURLLimiter);\n    const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupsCollection = db.collection('reviewList');\n    const result = await meetupsCollection.aggregate([{\n      $sort: {\n        date: -1\n      }\n    }, {\n      $facet: {\n        totalRecords: [{\n          $count: 'body'\n        }],\n        data: [{\n          $match: {\n            restaurant: currURLLimiter\n          }\n        }, {\n          $skip: skip\n        }, {\n          $limit: limit\n        }]\n      }\n    }]).toArray();\n    res.send(result);\n    client.close(); // const resCollection = db.collection('checkoutList');\n    // await resCollection.insertOne(data);\n    // client.close();\n    // res.status(201).json({message: 'Checkout Complete!'});\n  }\n}\n\n;\nexport default getHandler;","map":{"version":3,"sources":["C:/Users/dgaidar/Documents/VScode/React/FoodOrderingSite/pages/api/getHandler.js"],"names":["MongoClient","getHandler","req","res","method","data","body","console","log","query","pageIndex","page","parseInt","limit","pageSize","currURLLimiter","restaurantURL","slice","skip","client","connect","db","meetupsCollection","collection","result","aggregate","$sort","date","$facet","totalRecords","$count","$match","restaurant","$skip","$limit","toArray","send","close"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,SAA1B;;AAEA,eAAeC,UAAf,CAA0BC,GAA1B,EAA+BC,GAA/B,EAAoC;AAEhC,MAAID,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAAyB;AACrB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACO,KAAJ,CAAUC,SAAtB;AACJ,UAAMC,IAAI,GAAGT,GAAG,CAACO,KAAJ,CAAUC,SAAV,GAAsBE,QAAQ,CAACV,GAAG,CAACO,KAAJ,CAAUC,SAAX,CAA9B,GAAsD,CAAnE;AACA,UAAMG,KAAK,GAAGX,GAAG,CAACO,KAAJ,CAAUK,QAAV,GAAqBF,QAAQ,CAACV,GAAG,CAACO,KAAJ,CAAUK,QAAX,CAA7B,GAAoD,CAAlE;AACA,UAAMC,cAAc,GAAGb,GAAG,CAACO,KAAJ,CAAUO,aAAV,CAAwBC,KAAxB,CAA8B,EAA9B,CAAvB;AACA,UAAMC,IAAI,GAAG,CAACP,IAAI,GAAG,CAAR,IAAaE,KAA1B;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYO,cAAZ;AACA,UAAMI,MAAM,GAAG,MAAMnB,WAAW,CAACoB,OAAZ,CACjB,+GADiB,CAArB;AAEE,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACF,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,YAAd,CAA1B;AACA,UAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4B,CAC7C;AACIC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,CAAC;AADJ;AADX,KAD6C,EAM7C;AACAC,MAAAA,MAAM,EAAE;AACJC,QAAAA,YAAY,EAAE,CAAC;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAD,CADV;AAEJzB,QAAAA,IAAI,EAAG,CAAC;AAAC0B,UAAAA,MAAM,EAAE;AAACC,YAAAA,UAAU,EAAEjB;AAAb;AAAT,SAAD,EAAyC;AAACkB,UAAAA,KAAK,EAAEf;AAAR,SAAzC,EAAuD;AAACgB,UAAAA,MAAM,EAAErB;AAAT,SAAvD;AAFH;AADR,KAN6C,CAA5B,EAalBsB,OAbkB,EAArB;AAcAhC,IAAAA,GAAG,CAACiC,IAAJ,CAASZ,MAAT;AACAL,IAAAA,MAAM,CAACkB,KAAP,GA3ByB,CA4BzB;AAEA;AACA;AACA;AACC;AAEJ;;AAAA;AAED,eAAepC,UAAf","sourcesContent":["import {MongoClient} from 'mongodb';\r\n\r\nasync function getHandler(req, res) {\r\n\r\n    if (req.method === 'GET'){\r\n        const data = req.body;\r\n        console.log(req.query.pageIndex);\r\n    const page = req.query.pageIndex ? parseInt(req.query.pageIndex) : 1;\r\n    const limit = req.query.pageSize ? parseInt(req.query.pageSize) : 2;\r\n    const currURLLimiter = req.query.restaurantURL.slice(16);\r\n    const skip = (page - 1) * limit;\r\n    console.log(currURLLimiter);\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority'  );\r\n      const db = client.db();\r\n    const meetupsCollection = db.collection('reviewList');\r\n    const result = await meetupsCollection.aggregate([\r\n        {\r\n            $sort: {\r\n                date: -1\r\n            }\r\n        },\r\n        {\r\n        $facet: {\r\n            totalRecords: [{$count: 'body'}],\r\n            data : [{$match: {restaurant: currURLLimiter}}, {$skip: skip},{$limit: limit}]\r\n        }\r\n        }\r\n        \r\n    ]).toArray();\r\n    res.send(result);\r\n    client.close();\r\n    // const resCollection = db.collection('checkoutList');\r\n    \r\n    // await resCollection.insertOne(data);\r\n    // client.close();\r\n    // res.status(201).json({message: 'Checkout Complete!'});\r\n    }\r\n\r\n};\r\n\r\nexport default getHandler;"]},"metadata":{},"sourceType":"module"}