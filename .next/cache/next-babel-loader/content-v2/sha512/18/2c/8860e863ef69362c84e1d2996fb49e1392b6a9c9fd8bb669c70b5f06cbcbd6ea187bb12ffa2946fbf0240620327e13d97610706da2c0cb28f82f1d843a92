{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dgaidar\\\\Documents\\\\VScode\\\\React\\\\FoodOrderingSite\\\\components\\\\store\\\\use-context.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nvar AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: function login(token) {},\n  logout: function logout() {}\n});\nexport var AuthContextProvider = function AuthContextProvider(props) {\n  _s();\n\n  var initialToken;\n\n  if (true) {\n    var tokenData = localStorage.getItem('token');\n\n    if (tokenData) {\n      initialToken = tokenData;\n    }\n\n    var _useState = useState(initialToken),\n        token = _useState[0],\n        setToken = _useState[1];\n\n    var userIsLoggedIn = !!token;\n\n    var loginHandler = function loginHandler(token) {\n      setToken(token);\n      localStorage.setItem('token', token);\n    };\n\n    var logoutHandler = function logoutHandler(token) {\n      setToken(null);\n    };\n\n    var contextValue = {\n      token: token,\n      isLoggedIn: userIsLoggedIn,\n      login: loginHandler,\n      logout: logoutHandler\n    };\n    return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: contextValue,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: AuthContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(AuthContextProvider, \"DwLkG0ghrRM0X6QeCjlo1LZq3rI=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/dgaidar/Documents/VScode/React/FoodOrderingSite/components/store/use-context.js"],"names":["React","useEffect","useState","AuthContext","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","initialToken","tokenData","localStorage","getItem","setToken","userIsLoggedIn","loginHandler","setItem","logoutHandler","contextValue","children"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,IAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACpCC,EAAAA,KAAK,EAAE,EAD6B;AAEpCC,EAAAA,UAAU,EAAE,KAFwB;AAGpCC,EAAAA,KAAK,EAAE,eAACF,KAAD,EAAW,CAAE,CAHgB;AAIpCG,EAAAA,MAAM,EAAE,kBAAM,CAAE;AAJoB,CAApB,CAApB;AAQA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AAAA;;AAC1C,MAAIC,YAAJ;;AACA,YAAmC;AAEnC,QAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;;AAEA,QAAIF,SAAJ,EAAc;AACVD,MAAAA,YAAY,GAAGC,SAAf;AACH;;AANkC,oBAOTV,QAAQ,CAACS,YAAD,CAPC;AAAA,QAO5BN,KAP4B;AAAA,QAOrBU,QAPqB;;AASnC,QAAMC,cAAc,GAAG,CAAC,CAACX,KAAzB;;AAEA,QAAMY,YAAY,GAAG,SAAfA,YAAe,CAACZ,KAAD,EAAW;AAC5BU,MAAAA,QAAQ,CAACV,KAAD,CAAR;AACAQ,MAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA6Bb,KAA7B;AACH,KAHD;;AAIA,QAAMc,aAAa,GAAG,SAAhBA,aAAgB,CAACd,KAAD,EAAW;AAC7BU,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFD;;AAGA,QAAMK,YAAY,GAAG;AACjBf,MAAAA,KAAK,EAAEA,KADU;AAEjBC,MAAAA,UAAU,EAAEU,cAFK;AAGjBT,MAAAA,KAAK,EAAEU,YAHU;AAIjBT,MAAAA,MAAM,EAAEW;AAJS,KAArB;AAMA,wBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAIC,YAA/B;AAAA,gBACFV,KAAK,CAACW;AADJ;AAAA;AAAA;AAAA;AAAA,aAAP;AAGC;;AACD,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAIlB,WAA/B;AAAA,cACNO,KAAK,CAACW;AADA;AAAA;AAAA;AAAA;AAAA,WAAP;AAGH,CAjCM;;GAAMZ,mB;;KAAAA,mB;AAkCb,eAAeN,WAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    login: (token) => {},\r\n    logout: () => {}\r\n});\r\n\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    let initialToken;\r\n    if (typeof window !== 'undefined') {\r\n  \r\n    const tokenData = localStorage.getItem('token');\r\n\r\n    if (tokenData){\r\n        initialToken = tokenData;\r\n    }\r\n    const [token ,setToken] = useState(initialToken);\r\n\r\n    const userIsLoggedIn = !!token;\r\n\r\n    const loginHandler = (token) => {\r\n        setToken(token);\r\n        localStorage.setItem('token',token);\r\n    };\r\n    const logoutHandler = (token) => {\r\n        setToken(null);\r\n    }\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler\r\n    };\r\n    return <AuthContext.Provider value = {contextValue}>\r\n        {props.children}\r\n    </AuthContext.Provider>\r\n    }\r\n    return <AuthContext.Provider value = {AuthContext}>\r\n    {props.children}\r\n</AuthContext.Provider>\r\n}\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}