{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\dgaidar\\\\Documents\\\\VScode\\\\React\\\\FoodOrderingSite\\\\pages\\\\AllRestaurants\\\\[businessId]\\\\index.js\";\nimport DetailCard from \"../../../components/Card/DetailCard\";\nimport { Fragment, useContext } from \"react\";\nimport AuthContext from \"../../../components/store/use-context\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport Image from \"../../../components/Details/image\";\nimport Details from '../../../components/Details/Details';\nimport Menu from \"../../../components/Details/Menu\";\nimport ItemCard from \"../../../components/Card/ItemCard\";\nimport ModalCart from \"../../../components/Cart/ModalCart\";\nimport ReviewPage from \"../../../components/Details/ReviewPage\";\nimport { MongoClient } from \"mongodb\";\n\nconst businessDetails = props => {\n  console.log(props);\n\n  async function addReviewHandler(enteredItemData) {\n    const response = await fetch('../api/ReviewHandler', {\n      method: 'POST',\n      body: JSON.stringify({\n        subject: enteredItemData.subject,\n        body: enteredItemData.body,\n        date: enteredItemData.date,\n        restaurant: a === null || a === void 0 ? void 0 : a.id,\n        user: authCtx.user\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n  }\n\n  const authCtx = useContext(AuthContext);\n  const {\n    0: a,\n    1: setA\n  } = useState([]);\n  const {\n    0: b,\n    1: setB\n  } = useState([]);\n  const router = useRouter();\n  console.log(authCtx.menu);\n  console.log(authCtx);\n  const currMenu = authCtx.menu;\n  const currReviewList = authCtx.reviewList;\n  console.log(currMenu);\n  console.log(router);\n  useEffect(() => {\n    const key = router.asPath.slice(16);\n    console.log(key);\n    setA(currMenu.filter(x => x.id === key)[0]);\n    console.log(currMenu.filter(x => x.id == key));\n    setB(currReviewList.filter(x => x.restaurant == key));\n    console.log(a);\n    console.log('reviewlist!!!!!!', b);\n  }, [currMenu, router, a]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '8vw',\n      marginRight: '8vw',\n      marginBottom: '10vw'\n    },\n    children: [/*#__PURE__*/_jsxDEV(DetailCard, {\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        image: a === null || a === void 0 ? void 0 : a.image,\n        details: a === null || a === void 0 ? void 0 : a.name,\n        subtitle: a === null || a === void 0 ? void 0 : a.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DetailCard, {\n      children: /*#__PURE__*/_jsxDEV(Details, {\n        description: a === null || a === void 0 ? void 0 : a.paragraph\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ItemCard, {\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        menu: a === null || a === void 0 ? void 0 : a.menu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ItemCard, {\n      children: /*#__PURE__*/_jsxDEV(ReviewPage, {\n        addReviewHandler: addReviewHandler,\n        reviewList: b\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), authCtx.isOpen && /*#__PURE__*/_jsxDEV(ModalCart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('reviewList');\n  console.log(meetupsCollection);\n  const meetups = await meetupsCollection.find({}, {\n    restaurant: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: \"blocking\",\n    paths: meetups.map(meetup => ({\n      params: {\n        businessId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.businessId;\n  console.log('meetupId', meetupId);\n  const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('reviewList');\n  const selectedMeetup = await meetupsCollection.find({\n    restaurant: meetupId\n  });\n  console.log('typeof', selectedMeetup.map());\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup.map(r => ({\n        user: r.user,\n        date: r.date,\n        id: r._id.toString(),\n        body: r.body,\n        subject: r.subject,\n        restaurant: r.restaurant\n      }))\n    }\n  };\n}\nexport default businessDetails;","map":{"version":3,"sources":["C:/Users/dgaidar/Documents/VScode/React/FoodOrderingSite/pages/AllRestaurants/[businessId]/index.js"],"names":["DetailCard","Fragment","useContext","AuthContext","useRouter","useEffect","useState","Image","Details","Menu","ItemCard","ModalCart","ReviewPage","MongoClient","businessDetails","props","console","log","addReviewHandler","enteredItemData","response","fetch","method","body","JSON","stringify","subject","date","restaurant","a","id","user","authCtx","headers","data","json","setA","b","setB","router","menu","currMenu","currReviewList","reviewList","key","asPath","slice","filter","x","marginLeft","marginRight","marginBottom","image","name","description","paragraph","isOpen","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","toArray","close","fallback","paths","map","meetup","params","businessId","_id","toString","getStaticProps","context","meetupId","selectedMeetup","meetupData","r"],"mappings":"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","sourcesContent":["\r\nimport DetailCard from \"../../../components/Card/DetailCard\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport AuthContext from \"../../../components/store/use-context\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Image from \"../../../components/Details/image\";\r\nimport Details from '../../../components/Details/Details';\r\nimport Menu from \"../../../components/Details/Menu\";\r\nimport ItemCard from \"../../../components/Card/ItemCard\";\r\nimport ModalCart from \"../../../components/Cart/ModalCart\";\r\nimport ReviewPage from \"../../../components/Details/ReviewPage\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nconst businessDetails = (props) => {\r\n    console.log(props);\r\n    async function addReviewHandler(enteredItemData) {\r\n        const response = await fetch('../api/ReviewHandler', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            subject: enteredItemData.subject,\r\n            body: enteredItemData.body,\r\n            date: enteredItemData.date,\r\n            restaurant: a?.id,\r\n            user: authCtx.user\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n    \r\n        const data = await response.json();\r\n        \r\n    }\r\n    const authCtx = useContext(AuthContext);\r\n    const [a, setA] = useState([]);\r\n    const [b, setB] = useState([]);\r\n    const router = useRouter();\r\n    console.log(authCtx.menu);\r\n    console.log(authCtx);\r\n    const currMenu = authCtx.menu;\r\n    const currReviewList = authCtx.reviewList;\r\n    console.log(currMenu);\r\n    console.log(router);\r\n\r\n    useEffect(() => {\r\n       const key = router.asPath.slice(16);\r\n       console.log(key);\r\n       setA(currMenu.filter(x => x.id === key)[0]);\r\n       console.log(currMenu.filter(x => x.id == key));\r\n       setB(currReviewList.filter(x => x.restaurant == key));\r\n  \r\n       console.log(a);\r\n       console.log('reviewlist!!!!!!', b);\r\n    }, [currMenu, router, a])\r\n    \r\n    return <div style = {{marginLeft: '8vw', marginRight: '8vw', marginBottom: '10vw'}}>\r\n\r\n        <DetailCard><Image image = {a?.image} details = {a?.name} subtitle = {a?.description}/></DetailCard>\r\n        <DetailCard><Details description = {a?.paragraph}/></DetailCard>\r\n        <ItemCard><Menu menu = {a?.menu}/></ItemCard>\r\n        <ItemCard><ReviewPage addReviewHandler = {addReviewHandler} reviewList = {b}/></ItemCard>\r\n        {authCtx.isOpen && <ModalCart/>}\r\n    </div>\r\n    \r\n}\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n      'mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority'  );\r\n      const db = client.db();\r\n\r\n      const meetupsCollection = db.collection('reviewList');\r\n      console.log(meetupsCollection);\r\n      const meetups = await meetupsCollection.find({}, { restaurant: 1 }).toArray();\r\n   \r\n      client.close();\r\n    \r\n      return {\r\n        fallback: \"blocking\",\r\n        paths: meetups.map((meetup) => ({\r\n          params: { businessId: meetup._id.toString() },\r\n        })),\r\n      };\r\n  }\r\n  \r\n  export async function getStaticProps(context) {\r\n    // fetch data for a single meetup\r\n  \r\n    const meetupId = context.params.businessId;\r\n    console.log('meetupId',meetupId);\r\n    const client = await MongoClient.connect(\r\n      'mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority'  );\r\n    const db = client.db();\r\n  \r\n    const meetupsCollection = db.collection('reviewList');\r\n  \r\n    const selectedMeetup = await meetupsCollection.find({\r\n      restaurant: meetupId,\r\n    });\r\n    console.log('typeof', selectedMeetup.map());\r\n    client.close();\r\n  \r\n    return {\r\n      props: {\r\n        meetupData: selectedMeetup.map(r => ({\r\n            user: r.user,\r\n            date: r.date,\r\n            id: r._id.toString(),\r\n            body: r.body,\r\n            subject: r.subject,\r\n            restaurant: r.restaurant\r\n        }))\r\n        \r\n      },\r\n    };\r\n  }\r\n\r\n\r\nexport default businessDetails;"]},"metadata":{},"sourceType":"module"}