{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dgaidar\\\\Documents\\\\VScode\\\\React\\\\FoodOrderingSite\\\\pages\\\\AllRestaurants\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport AuthContext from \"../../components/store/use-context\";\nimport { Fragment, useContext, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Restaurant from \"../../components/RestaurantList/Restaurant\";\nimport ModalCart from \"../../components/Cart/ModalCart\";\nimport Card from \"../../components/Card/Card\";\nimport styles from '../../components/RestaurantList/RestaurantItem.module.css';\n\nvar AllRestaurants = function AllRestaurants(props) {\n  _s();\n\n  var authCtx = useContext(AuthContext);\n  console.log(props);\n  var router = useRouter();\n  console.log(authCtx.isBusiness);\n  useEffect(function () {\n    authCtx.pushMenu(props.res);\n    authCtx.pushReviews(props.review);\n\n    if (!authCtx.isLoggedIn) {\n      router.push('/');\n    }\n\n    if (authCtx.isBusiness) {\n      router.push('/business');\n    }\n  }, [authCtx.isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userContainer,\n        children: [\"Welcome, \", authCtx.user, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.subtitle,\n        children: \"Be sure to Grab Something Tasty Here at ReactEats!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, _this), authCtx.isOpen && /*#__PURE__*/_jsxDEV(ModalCart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 28\n    }, _this), /*#__PURE__*/_jsxDEV(Restaurant, {\n      res: props.res\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(AllRestaurants, \"YxpvSfJcwIiE33vfSQvuoQjnMQo=\", false, function () {\n  return [useRouter];\n});\n\n_c = AllRestaurants;\nexport var __N_SSG = true;\nexport default AllRestaurants;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllRestaurants\");","map":{"version":3,"sources":["C:/Users/dgaidar/Documents/VScode/React/FoodOrderingSite/pages/AllRestaurants/index.js"],"names":["AuthContext","Fragment","useContext","useEffect","useRouter","Restaurant","ModalCart","Card","styles","AllRestaurants","props","authCtx","console","log","router","isBusiness","pushMenu","res","pushReviews","review","isLoggedIn","push","userContainer","user","subtitle","isOpen"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,oCAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AAEA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,MAAP,MAAmB,2DAAnB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAAA;;AAC9B,MAAMC,OAAO,GAAGT,UAAU,CAACF,WAAD,CAA1B;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,MAAMI,MAAM,GAAGV,SAAS,EAAxB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACI,UAApB;AACAZ,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,OAAO,CAACK,QAAR,CAAiBN,KAAK,CAACO,GAAvB;AACAN,IAAAA,OAAO,CAACO,WAAR,CAAoBR,KAAK,CAACS,MAA1B;;AACA,QAAI,CAACR,OAAO,CAACS,UAAb,EAAwB;AACpBN,MAAAA,MAAM,CAACO,IAAP,CAAY,GAAZ;AACH;;AACD,QAAIV,OAAO,CAACI,UAAZ,EAAuB;AACnBD,MAAAA,MAAM,CAACO,IAAP,CAAY,WAAZ;AACH;AACJ,GATQ,EASP,CAACV,OAAO,CAACS,UAAT,CATO,CAAT;AAUA,sBAAO,QAAC,QAAD;AAAA,4BACH,QAAC,IAAD;AAAA,8BAAM;AAAK,QAAA,SAAS,EAAIZ,MAAM,CAACc,aAAzB;AAAA,gCAAkDX,OAAO,CAACY,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,eAAN,eACA;AAAK,QAAA,SAAS,EAAIf,MAAM,CAACgB,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA;AAAA;AAAA;AAAA;AAAA;AAAA,aADG,EAGFb,OAAO,CAACc,MAAR,iBAAkB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,aAHhB,eAIH,QAAC,UAAD;AACA,MAAA,GAAG,EAAIf,KAAK,CAACO;AADb;AAAA;AAAA;AAAA;AAAA,aAJG;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAQH,CAvBD;;GAAMR,c;UAGaL,S;;;KAHbK,c;;AA0DN,eAAeA,cAAf","sourcesContent":["import AuthContext from \"../../components/store/use-context\";\r\nimport { Fragment, useContext, useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Restaurant from \"../../components/RestaurantList/Restaurant\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport ModalCart from \"../../components/Cart/ModalCart\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport styles from '../../components/RestaurantList/RestaurantItem.module.css';\r\n\r\nconst AllRestaurants = (props) => {\r\n    const authCtx = useContext(AuthContext);\r\n    console.log(props);\r\n    const router = useRouter();\r\n    console.log(authCtx.isBusiness);\r\n    useEffect(() => {\r\n        authCtx.pushMenu(props.res);\r\n        authCtx.pushReviews(props.review);\r\n        if (!authCtx.isLoggedIn){\r\n            router.push('/')\r\n        }\r\n        if (authCtx.isBusiness){\r\n            router.push('/business');\r\n        }\r\n    },[authCtx.isLoggedIn])\r\n    return <Fragment>\r\n        <Card><div className = {styles.userContainer}>Welcome, {authCtx.user}!</div>\r\n        <div className = {styles.subtitle}>Be sure to Grab Something Tasty Here at ReactEats!</div></Card>\r\n        {authCtx.isOpen && <ModalCart/>}\r\n        <Restaurant \r\n        res = {props.res}\r\n        />\r\n        </Fragment>\r\n}\r\n\r\nexport async function getStaticProps() {\r\n    const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const resCollection = db.collection('ResList');\r\n    const revCollection = db.collection('reviewList');\r\n    const res = await resCollection.find().toArray();\r\n    const review = await revCollection.find().toArray();\r\n    client.close();\r\n    return {\r\n        props: {\r\n            res: res.map(r => ({\r\n                name: r.name,\r\n                address: r.address,\r\n                image: r.image,\r\n                id: r._id.toString(),\r\n                description: r.description,\r\n                menu: r.menu,\r\n                paragraph: r.paragraph\r\n            })),\r\n            review: review.map(r => ({\r\n                user: r.user,\r\n                date: r.date,\r\n                id: r._id.toString(),\r\n                body: r.body,\r\n                subject: r.subject,\r\n                restaurant: r.restaurant\r\n            }))\r\n        },\r\n        revalidate: 10\r\n    };\r\n}\r\n\r\n\r\nexport default AllRestaurants;\r\n\r\n"]},"metadata":{},"sourceType":"module"}