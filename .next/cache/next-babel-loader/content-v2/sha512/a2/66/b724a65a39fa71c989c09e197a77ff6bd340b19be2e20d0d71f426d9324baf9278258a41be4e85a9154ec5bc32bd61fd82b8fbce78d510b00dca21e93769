{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/dgaidar/Documents/VScode/React/FoodOrderingSite/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/Users/dgaidar/Documents/VScode/React/FoodOrderingSite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dgaidar\\\\Documents\\\\VScode\\\\React\\\\FoodOrderingSite\\\\pages\\\\AllRestaurants\\\\[businessId]\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport DetailCard from \"../../../components/Card/DetailCard\";\nimport { useContext } from \"react\";\nimport AuthContext from \"../../../components/store/use-context\";\nimport Image from \"../../../components/Details/image\";\nimport Details from '../../../components/Details/Details';\nimport Menu from \"../../../components/Details/Menu\";\nimport ItemCard from \"../../../components/Card/ItemCard\";\nimport ModalCart from \"../../../components/Cart/ModalCart\";\nimport ReviewPage from \"../../../components/Details/ReviewPage\";\n\nvar businessDetails = function businessDetails(props) {\n  _s();\n\n  var _props$restaurant, _props$restaurant2, _props$restaurant3, _props$restaurant4, _props$restaurant5;\n\n  function getter(_x) {\n    return _getter.apply(this, arguments);\n  }\n\n  function _getter() {\n    _getter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(enteredItemData) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('../api/getHandler', {\n                method: 'GET',\n                query: {\n                  pageIndex: 3,\n                  pageSize: 10\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              console.log(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getter.apply(this, arguments);\n  }\n\n  function addReviewHandler(_x2) {\n    return _addReviewHandler.apply(this, arguments);\n  }\n\n  function _addReviewHandler() {\n    _addReviewHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(enteredItemData) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('../api/ReviewHandler', {\n                method: 'POST',\n                body: JSON.stringify({\n                  subject: enteredItemData.subject,\n                  body: enteredItemData.body,\n                  date: enteredItemData.date,\n                  stars: enteredItemData.stars,\n                  restaurant: props.restaurant.id,\n                  user: authCtx.user\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 2:\n              response = _context2.sent;\n              _context2.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context2.sent;\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _addReviewHandler.apply(this, arguments);\n  }\n\n  var authCtx = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '8vw',\n      marginRight: '8vw',\n      marginBottom: '10vw'\n    },\n    children: [/*#__PURE__*/_jsxDEV(DetailCard, {\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        image: (_props$restaurant = props.restaurant) === null || _props$restaurant === void 0 ? void 0 : _props$restaurant.image,\n        details: (_props$restaurant2 = props.restaurant) === null || _props$restaurant2 === void 0 ? void 0 : _props$restaurant2.name,\n        subtitle: (_props$restaurant3 = props.restaurant) === null || _props$restaurant3 === void 0 ? void 0 : _props$restaurant3.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(DetailCard, {\n      children: /*#__PURE__*/_jsxDEV(Details, {\n        description: (_props$restaurant4 = props.restaurant) === null || _props$restaurant4 === void 0 ? void 0 : _props$restaurant4.paragraph\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(ItemCard, {\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        menu: (_props$restaurant5 = props.restaurant) === null || _props$restaurant5 === void 0 ? void 0 : _props$restaurant5.menu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(ItemCard, {\n      children: /*#__PURE__*/_jsxDEV(ReviewPage, {\n        addReviewHandler: addReviewHandler,\n        reviewList: props.reviews\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(DetailCard, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getter,\n        children: \"clicker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, _this), authCtx.isOpen && /*#__PURE__*/_jsxDEV(ModalCart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 28\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(businessDetails, \"HgVQGKeM6jZ5dc2JVxj9nYffoaU=\");\n\nexport var __N_SSG = true;\nexport default businessDetails;","map":{"version":3,"sources":["C:/Users/dgaidar/Documents/VScode/React/FoodOrderingSite/pages/AllRestaurants/[businessId]/index.js"],"names":["DetailCard","useContext","AuthContext","Image","Details","Menu","ItemCard","ModalCart","ReviewPage","businessDetails","props","getter","enteredItemData","fetch","method","query","pageIndex","pageSize","response","json","data","console","log","addReviewHandler","body","JSON","stringify","subject","date","stars","restaurant","id","user","authCtx","headers","marginLeft","marginRight","marginBottom","image","name","description","paragraph","menu","reviews","isOpen"],"mappings":"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","sourcesContent":["\r\nimport DetailCard from \"../../../components/Card/DetailCard\";\r\nimport { useContext } from \"react\";\r\nimport AuthContext from \"../../../components/store/use-context\";\r\nimport Image from \"../../../components/Details/image\";\r\nimport Details from '../../../components/Details/Details';\r\nimport Menu from \"../../../components/Details/Menu\";\r\nimport ItemCard from \"../../../components/Card/ItemCard\";\r\nimport ModalCart from \"../../../components/Cart/ModalCart\";\r\nimport ReviewPage from \"../../../components/Details/ReviewPage\";\r\nimport { MongoClient, ObjectId, } from \"mongodb\";\r\n\r\nconst businessDetails = (props) => {\r\n    async function getter(enteredItemData) {\r\n        const response = await fetch('../api/getHandler',\r\n        {\r\n            method: 'GET',\r\n            query: {\r\n                pageIndex: 3,\r\n                pageSize: 10\r\n                 \r\n            }\r\n        } );\r\n        const data = await response.json();\r\n        console.log(data);\r\n    }\r\n    async function addReviewHandler(enteredItemData) {\r\n        const response = await fetch('../api/ReviewHandler', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            subject: enteredItemData.subject,\r\n            body: enteredItemData.body,\r\n            date: enteredItemData.date,\r\n            stars: enteredItemData.stars,\r\n            restaurant: props.restaurant.id,\r\n            user: authCtx.user\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n    \r\n        const data = await response.json();\r\n        \r\n    }\r\n    const authCtx = useContext(AuthContext);\r\n   \r\n    \r\n    return <div style = {{marginLeft: '8vw', marginRight: '8vw', marginBottom: '10vw'}}>\r\n\r\n        <DetailCard><Image image = {props.restaurant?.image} details = {props.restaurant?.name} subtitle = {props.restaurant?.description}/></DetailCard>\r\n        <DetailCard><Details description = {props.restaurant?.paragraph}/></DetailCard>\r\n        <ItemCard><Menu menu = {props.restaurant?.menu}/></ItemCard>\r\n        <ItemCard><ReviewPage addReviewHandler = {addReviewHandler} reviewList = {props.reviews}/></ItemCard>\r\n        <DetailCard><button onClick = {getter}>clicker</button></DetailCard>\r\n        {authCtx.isOpen && <ModalCart/>}\r\n    </div>\r\n    \r\n}\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n      'mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority'  );\r\n      const db = client.db();\r\n\r\n      const meetupsCollection = db.collection('reviewList');\r\n      console.log(meetupsCollection);\r\n      const meetups = await meetupsCollection.find({}, { restaurant: 1 }).toArray();\r\n   \r\n      client.close();\r\n    \r\n      return {\r\n        fallback: \"blocking\",\r\n        paths: meetups.map((meetup) => ({\r\n          params: { businessId: meetup._id.toString() },\r\n        })),\r\n      };\r\n  }\r\n  \r\n  export async function getStaticProps(context) {\r\n    // fetch data for a single meetup\r\n  \r\n    const meetupId = context.params.businessId;\r\n    console.log('meetupId',typeof meetupId);\r\n    const client = await MongoClient.connect(\r\n      'mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority'  );\r\n    const db = client.db();\r\n  \r\n    const meetupsCollection = db.collection('reviewList');\r\n    const resCollection = db.collection('ResList');\r\n    const  review = await meetupsCollection.find({\r\n      restaurant: meetupId\r\n    }).toArray();\r\n    const res = await resCollection.findOne({\r\n        _id: ObjectId(meetupId)\r\n    })\r\n\r\n    client.close();\r\n  \r\n    return {\r\n      props: {\r\n        reviews: review.map(r => ({\r\n            user: r.user,\r\n            date: r.date,\r\n            id: r._id.toString(),\r\n            body: r.body,\r\n            subject: r.subject,\r\n            restaurant: r.restaurant,\r\n            stars: r.stars \r\n        })),\r\n        restaurant: {\r\n            name: res.name,\r\n            address: res.address,\r\n            image: res.image,\r\n            id: res._id.toString(),\r\n            description: res.description,\r\n            menu: res.menu,\r\n            paragraph: res.paragraph\r\n        }\r\n      },\r\n      revalidate: 10\r\n    };\r\n  }\r\n\r\n\r\nexport default businessDetails;"]},"metadata":{},"sourceType":"module"}