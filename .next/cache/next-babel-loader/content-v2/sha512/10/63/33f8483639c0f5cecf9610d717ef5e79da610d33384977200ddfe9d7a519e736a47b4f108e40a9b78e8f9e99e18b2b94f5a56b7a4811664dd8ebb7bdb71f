{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\dgaidar\\\\Documents\\\\VScode\\\\React\\\\FoodOrderingSite\\\\pages\\\\AllRestaurants\\\\index.js\";\nimport AuthContext from \"../../components/store/use-context\";\nimport { Fragment, useContext, useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Restaurant from \"../../components/RestaurantList/Restaurant\";\nimport { MongoClient } from \"mongodb\";\nimport ModalCart from \"../../components/Cart/ModalCart\";\nimport Card from \"../../components/Card/Card\";\nimport styles from '../../components/RestaurantList/RestaurantItem.module.css';\n\nconst AllRestaurants = props => {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: resList,\n    1: setResList\n  } = useState([]);\n  const {\n    0: currList,\n    1: setCurrList\n  } = useState(1);\n  const {\n    0: totalNum,\n    1: setTotalNum\n  } = useState(null);\n\n  async function getter(enteredItemData = 1) {\n    setIsLoading(true);\n    const response = await fetch(`../api/getResHandler?pageIndex=${enteredItemData}&pageSize=2`, {\n      method: 'GET'\n    });\n    const data = await response.json();\n    console.log(' data:', data);\n    setIsLoading(false);\n\n    if (!totalNum) {\n      setTotalNum(data[0].totalRecords[0].description);\n    }\n\n    setResList(data[0].data);\n  }\n\n  const authCtx = useContext(AuthContext);\n  console.log(props);\n  const router = useRouter();\n  console.log(authCtx.isBusiness);\n\n  const setter = () => {\n    console.log('hrllo');\n    setCurrList(prevVal => {\n      if (totalNum / 2 > prevVal) {\n        prevVal++;\n      }\n\n      getter(prevVal);\n      return prevVal;\n    });\n  };\n\n  useEffect(() => {\n    getter();\n  }, []);\n  useEffect(() => {\n    if (!authCtx.isLoggedIn) {\n      router.push('/');\n    }\n\n    if (authCtx.isBusiness) {\n      router.push('/business');\n    }\n  }, [authCtx.isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userContainer,\n        children: [\"Welcome, \", authCtx.user, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.subtitle,\n        children: \"Be sure to Grab Something Tasty Here at ReactEats!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), authCtx.isOpen && /*#__PURE__*/_jsxDEV(ModalCart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Restaurant, {\n      res: resList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setter,\n        children: \"next list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\n  const db = client.db();\n  const resCollection = db.collection('ResList');\n  const res = await resCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      res: res.map(r => ({\n        name: r.name,\n        address: r.address,\n        image: r.image,\n        id: r._id.toString(),\n        description: r.description,\n        menu: r.menu,\n        paragraph: r.paragraph\n      }))\n    },\n    revalidate: 10\n  };\n}\nexport default AllRestaurants;","map":{"version":3,"sources":["C:/Users/dgaidar/Documents/VScode/React/FoodOrderingSite/pages/AllRestaurants/index.js"],"names":["AuthContext","Fragment","useContext","useEffect","useState","useRouter","Restaurant","MongoClient","ModalCart","Card","styles","AllRestaurants","props","isLoading","setIsLoading","resList","setResList","currList","setCurrList","totalNum","setTotalNum","getter","enteredItemData","response","fetch","method","data","json","console","log","totalRecords","description","authCtx","router","isBusiness","setter","prevVal","isLoggedIn","push","userContainer","user","subtitle","isOpen","getStaticProps","client","connect","db","resCollection","collection","res","find","toArray","close","map","r","name","address","image","id","_id","toString","menu","paragraph","revalidate"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,oCAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,MAAP,MAAmB,2DAAnB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACa,QAAD;AAAA,OAAWC;AAAX,MAA0Bd,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACe,QAAD;AAAA,OAAWC;AAAX,MAA0BhB,QAAQ,CAAC,IAAD,CAAxC;;AACA,iBAAeiB,MAAf,CAAsBC,eAAe,GAAG,CAAxC,EAA2C;AACvCR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiCF,eAAgB,aAAnD,EAC5B;AACIG,MAAAA,MAAM,EAAE;AADZ,KAD4B,CAA5B;AAIA,UAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,IAAtB;AACAZ,IAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,QAAI,CAACK,QAAL,EAAc;AACVC,MAAAA,WAAW,CAACM,IAAI,CAAC,CAAD,CAAJ,CAAQI,YAAR,CAAqB,CAArB,EAAwBC,WAAzB,CAAX;AACH;;AAEDf,IAAAA,UAAU,CAACU,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAT,CAAV;AACH;;AACD,QAAMM,OAAO,GAAG9B,UAAU,CAACF,WAAD,CAA1B;AACA4B,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACA,QAAMqB,MAAM,GAAG5B,SAAS,EAAxB;AACAuB,EAAAA,OAAO,CAACC,GAAR,CAAYG,OAAO,CAACE,UAApB;;AACA,QAAMC,MAAM,GAAG,MAAM;AACjBP,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAX,IAAAA,WAAW,CAACkB,OAAO,IAAI;AACnB,UAAIjB,QAAQ,GAAG,CAAX,GAAeiB,OAAnB,EAA4B;AAC5BA,QAAAA,OAAO;AACN;;AACDf,MAAAA,MAAM,CAACe,OAAD,CAAN;AACA,aAAOA,OAAP;AACH,KANU,CAAX;AAOH,GATD;;AAUAjC,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,MAAM;AACT,GAFQ,EAEP,EAFO,CAAT;AAGAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAAC6B,OAAO,CAACK,UAAb,EAAwB;AACpBJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACH;;AACD,QAAIN,OAAO,CAACE,UAAZ,EAAuB;AACnBD,MAAAA,MAAM,CAACK,IAAP,CAAY,WAAZ;AACH;AACJ,GAPQ,EAOP,CAACN,OAAO,CAACK,UAAT,CAPO,CAAT;AAQA,sBAAO,QAAC,QAAD;AAAA,4BACH,QAAC,IAAD;AAAA,8BAAM;AAAK,QAAA,SAAS,EAAI3B,MAAM,CAAC6B,aAAzB;AAAA,gCAAkDP,OAAO,CAACQ,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN,eACA;AAAK,QAAA,SAAS,EAAI9B,MAAM,CAAC+B,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,EAGFT,OAAO,CAACU,MAAR,iBAAkB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAHhB,eAIH,QAAC,UAAD;AACA,MAAA,GAAG,EAAI3B;AADP;AAAA;AAAA;AAAA;AAAA,YAJG,eAOH,QAAC,IAAD;AAAA,6BACA;AAAQ,QAAA,OAAO,EAAIoB,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAPG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAWH,CAxDD;;AA0DA,OAAO,eAAeQ,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMrC,WAAW,CAACsC,OAAZ,CAAoB,+GAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,aAAa,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAtB;AACA,QAAMC,GAAG,GAAG,MAAMF,aAAa,CAACG,IAAd,GAAqBC,OAArB,EAAlB;AACAP,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACHxC,IAAAA,KAAK,EAAE;AACHqC,MAAAA,GAAG,EAAEA,GAAG,CAACI,GAAJ,CAAQC,CAAC,KAAK;AACfC,QAAAA,IAAI,EAAED,CAAC,CAACC,IADO;AAEfC,QAAAA,OAAO,EAAEF,CAAC,CAACE,OAFI;AAGfC,QAAAA,KAAK,EAAEH,CAAC,CAACG,KAHM;AAIfC,QAAAA,EAAE,EAAEJ,CAAC,CAACK,GAAF,CAAMC,QAAN,EAJW;AAKf7B,QAAAA,WAAW,EAAEuB,CAAC,CAACvB,WALA;AAMf8B,QAAAA,IAAI,EAAEP,CAAC,CAACO,IANO;AAOfC,QAAAA,SAAS,EAAER,CAAC,CAACQ;AAPE,OAAL,CAAT;AADF,KADJ;AAYHC,IAAAA,UAAU,EAAE;AAZT,GAAP;AAcH;AAGD,eAAepD,cAAf","sourcesContent":["import AuthContext from \"../../components/store/use-context\";\r\nimport { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Restaurant from \"../../components/RestaurantList/Restaurant\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport ModalCart from \"../../components/Cart/ModalCart\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport styles from '../../components/RestaurantList/RestaurantItem.module.css';\r\n\r\nconst AllRestaurants = (props) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [resList, setResList] = useState([]);\r\n    const [currList, setCurrList] = useState(1);\r\n    const [totalNum, setTotalNum] = useState(null);\r\n    async function getter(enteredItemData = 1) {\r\n        setIsLoading(true);\r\n        const response = await fetch(`../api/getResHandler?pageIndex=${enteredItemData}&pageSize=2`,\r\n        {\r\n            method: 'GET',\r\n        } );\r\n        const data = await response.json();\r\n        console.log(' data:', data);\r\n        setIsLoading(false);\r\n        if (!totalNum){\r\n            setTotalNum(data[0].totalRecords[0].description);\r\n        }\r\n    \r\n        setResList(data[0].data);\r\n    }\r\n    const authCtx = useContext(AuthContext);\r\n    console.log(props);\r\n    const router = useRouter();\r\n    console.log(authCtx.isBusiness);\r\n    const setter = () => {\r\n        console.log('hrllo');\r\n        setCurrList(prevVal => {\r\n            if (totalNum / 2 > prevVal) {\r\n            prevVal++; \r\n            }\r\n            getter(prevVal);\r\n            return prevVal;\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getter();\r\n    },[])\r\n    useEffect(() => {\r\n        if (!authCtx.isLoggedIn){\r\n            router.push('/')\r\n        }\r\n        if (authCtx.isBusiness){\r\n            router.push('/business');\r\n        }\r\n    },[authCtx.isLoggedIn])\r\n    return <Fragment>\r\n        <Card><div className = {styles.userContainer}>Welcome, {authCtx.user}!</div>\r\n        <div className = {styles.subtitle}>Be sure to Grab Something Tasty Here at ReactEats!</div></Card>\r\n        {authCtx.isOpen && <ModalCart/>}\r\n        <Restaurant \r\n        res = {resList}\r\n        />\r\n        <Card>\r\n        <button onClick = {setter} >next list</button>\r\n        </Card>\r\n        </Fragment>\r\n}\r\n\r\nexport async function getStaticProps() {\r\n    const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const resCollection = db.collection('ResList');\r\n    const res = await resCollection.find().toArray();\r\n    client.close();\r\n    return {\r\n        props: {\r\n            res: res.map(r => ({\r\n                name: r.name,\r\n                address: r.address,\r\n                image: r.image,\r\n                id: r._id.toString(),\r\n                description: r.description,\r\n                menu: r.menu,\r\n                paragraph: r.paragraph\r\n            }))\r\n        },\r\n        revalidate: 10\r\n    };\r\n}\r\n\r\n\r\nexport default AllRestaurants;\r\n\r\n"]},"metadata":{},"sourceType":"module"}