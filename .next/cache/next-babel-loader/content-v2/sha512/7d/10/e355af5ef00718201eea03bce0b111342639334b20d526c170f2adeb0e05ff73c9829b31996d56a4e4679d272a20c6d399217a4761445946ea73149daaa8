{"ast":null,"code":"import { MongoClient } from 'mongodb';\n\nasync function paragraphHandler(req, res) {\n  if (req.method === 'POST') {\n    const data = req.body;\n    const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\n    const db = client.db();\n    const resCollection = db.collection('ResList');\n    await resCollection.updateOne({\n      email: req.body.email\n    }, {\n      $set: {\n        paragraph: req.body.item\n      }\n    });\n    client.close();\n    res.status(201).json({\n      message: 'name updated!'\n    });\n  }\n}\n\n;\nexport default paragraphHandler;","map":{"version":3,"sources":["C:/Users/dgaidar/Documents/VScode/React/FoodOrderingSite/pages/api/paragraphHandler.js"],"names":["MongoClient","paragraphHandler","req","res","method","data","body","client","connect","db","resCollection","collection","updateOne","email","$set","paragraph","item","close","status","json","message"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,SAA1B;;AAEA,eAAeC,gBAAf,CAAgCC,GAAhC,EAAqCC,GAArC,EAA0C;AAEtC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA0B;AACtB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AAEJ,UAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoB,+GAApB,CAArB;AAEA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,UAAMC,aAAa,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAtB;AAEA,UAAMD,aAAa,CAACE,SAAd,CAAwB;AAACC,MAAAA,KAAK,EAAEX,GAAG,CAACI,IAAJ,CAASO;AAAjB,KAAxB,EAAiD;AAACC,MAAAA,IAAI,EAAE;AAACC,QAAAA,SAAS,EAAEb,GAAG,CAACI,IAAJ,CAASU;AAArB;AAAP,KAAjD,CAAN;AACAT,IAAAA,MAAM,CAACU,KAAP;AACAd,IAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAArB;AACC;AACJ;;AAAA;AAED,eAAenB,gBAAf","sourcesContent":["import {MongoClient} from 'mongodb';\r\n\r\nasync function paragraphHandler(req, res) {\r\n\r\n    if (req.method === 'POST'){\r\n        const data = req.body;\r\n    \r\n    const client = await MongoClient.connect('mongodb+srv://dg21:2x9QUtNjUM3tuL6p@cluster0.nxpoghz.mongodb.net/FoodOrderingSite?retryWrites=true&w=majority');\r\n\r\n    const db = client.db();\r\n    \r\n    const resCollection = db.collection('ResList');\r\n    \r\n    await resCollection.updateOne({email: req.body.email}, {$set: {paragraph: req.body.item}});\r\n    client.close();\r\n    res.status(201).json({message: 'name updated!'});\r\n    }\r\n};\r\n\r\nexport default paragraphHandler;"]},"metadata":{},"sourceType":"module"}